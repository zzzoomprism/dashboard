{"version":3,"sources":["hoc/AuthRedirect.js","redux/Socials/peopleReducer.ts","utils/helpers/SubmitButton.tsx","components/Pages/components/SnackbarContainer.tsx","utils/helpers/cardBreadcrumbs.tsx","utils/helpers/SocialNetworkIcon.tsx","components/Pages/Socials/Profile/Contacts/FormFields.tsx","components/Pages/Socials/Profile/Biography/BioFormField.tsx","components/Pages/Socials/Profile/AboutCard/AboutFormField.tsx","redux/Socials/followingReducer.ts","api/api.ts","components/AppBarNavigation.tsx","containers/AppBarNavigation.ts","components/Pages/components/DashboardMenu/ProfileButton.tsx","components/Pages/components/DashboardMenu/ProfileButtonContainer.tsx","components/Pages/components/DashboardMenu/DashboardMenu.tsx","containers/Pages/Dashboard/DashboardMenu.ts","components/SideBarDrawer.tsx","containers/SideBarDrawer.ts","utils/validators/validator.ts","components/Pages/Auth/LoginForm.tsx","components/Pages/Auth/Auth.tsx","utils/theme.ts","redux/appReducer.ts","containers/Auth.ts","components/Pages/Dashboard/Crypto/CryptoPrice.tsx","components/Pages/Dashboard/Crypto/PortfolioBalance.tsx","components/Pages/Dashboard/Crypto/SendMoneyTo/SendMoneyInfo.tsx","components/Pages/Dashboard/Crypto/SendMoneyTo/SendMonetyTo.tsx","api/currency-api.ts","api/user-api.ts","api/news-api.ts","redux/Dashboard/cryptoReducer.ts","containers/Pages/Dashboard/Crypto/SendMoneyTo.ts","components/Pages/Dashboard/Crypto/CurrencyNews/TabsItems.tsx","components/Pages/Dashboard/Crypto/CurrencyNews/CurrencyNews.tsx","containers/Pages/Dashboard/Crypto/CurrencyNews.ts","components/Pages/Dashboard/Crypto/CurrencyCalculator/Advertisment.tsx","components/Pages/Dashboard/Crypto/CurrencyCalculator/Calculator.tsx","containers/Pages/Dashboard/Crypto/Calculator.ts","components/Pages/Dashboard/Crypto/CurrencyCalculator/CurrencyCalculator.tsx","components/Pages/Dashboard/Crypto/Crypto.tsx","containers/Pages/Dashboard/Crypto/Crypto.ts","components/Pages/Dashboard/Folders/Folders.tsx","components/Pages/Settings/SettingSideBar.tsx","components/Pages/Settings/SettingSideBarContainer.ts","components/Pages/Settings/ProfileSettings/ProfileForm.tsx","components/Pages/Settings/ProfilePhoto/AvatarSetting.tsx","components/Pages/Settings/ProfilePhoto/AvatarSettingContainer.ts","components/Pages/Settings/ProfileSettings/ProfileSettings.tsx","components/Pages/Settings/ProfileSettings/ProfileSettingsContainer.ts","components/Pages/Settings/ThemeSetting/ThemeSettings.tsx","components/Pages/Settings/ThemeSetting/ThemeSettingContainer.ts","components/Pages/Settings/Settings.tsx","components/Content.tsx","App.tsx","AppContainer.ts","redux/appBarReducer.ts","redux/rootReducer.ts","index.tsx","utils/helpers/FormInput.tsx","components/Loaded.tsx","redux/Socials/profileReducer.ts"],"names":["mapStateToProps","store","isAuth","app","withAuthRedirect","Component","RedirectComponent","props","to","connect","initialState","people","followQueue","loading","isCurrentUserFollowed","reducer","state","action","newState","type","map","el","id","followed","data","a","length","find","item","userId","filter","follow","actions","setPeopleThunk","page","dispatch","serverAPI","users","items","followingThunk","then","isFollow","res","unfollowingThunk","unfollow","getCurrentUserFollow","getUserFollowingInfo","submitButton","isFetching","label","variant","color","disabled","component","size","SnackBarContainer","severity","error","successAlert","useState","open","setOpen","handleClose","hasError","resultCode","fullErrormessage","messages","i","autoHideDuration","onClose","cardBreadcrumbs","title","args","breadCrumbs","container","xs","fontWeight","fontFamily","iconHelper","key","FormFields","userInfo","fieldsArray","Object","keys","contacts","name","icon","renderTextFieldWithIcon","fullWidth","BioFormField","renderField","multiline","rows","AboutFormField","lookingJob","checked","setChecked","onChange","renderSwitchField","placeholder","totalFollowingCount","followingUsers","fetching","setFollowingUsersThunk","followingCount","response","unFollowFriend","ResultCodeEnum","Success","login_instance","axios","create","withCredentials","baseURL","headers","login","email","password","post","me","get","getUserById","delete","updateProfile","put","updatePhoto","image","count","useStyle","makeStyles","theme","root","flexGrow","appBar","breakpoints","up","width","menuButton","display","AppBarNavigation","sidebarToggle","classes","isMenuOpen","setMenuOpen","AppBar","position","className","Toolbar","IconButton","aria-label","edge","onClick","Typography","aria-controls","aria-haspopup","Badge","badgeContent","useStyles","background","palette","default","ProfileButton","user","menuIsOpen","ListItem","alignItems","button","ListItemAvatar","Avatar","alt","src","photos","small","Skeleton","animation","height","ListItemText","Box","fontSize","mt","fullName","style","marginBottom","keepMounted","MenuItem","NavLink","ListItemIcon","profile","currentUser","list_components","paddingLeft","menuCategory","spacing","DashboardMenu","primary","Collapse","in","timeout","unmountOnExit","List","disablePadding","drawer","transition","transitions","overline","paperAnchorDockedLeft","border","SideBarDrawer","Hidden","mdUp","implementation","Drawer","anchor","ModalProps","sidebar_open","smDown","required","value","alignSelf","down","marginTop","margin","renderTextField","iconButton","input","meta","touched","custom","TextField","helperText","InputProps","endAdornment","LoginReduxForm","reduxForm","form","passwordIsVisible","setPasswordVisible","onSubmit","handleSubmit","flexDirection","Field","validate","InputAdornment","Visibility","VisibilityOff","m","justifyContent","Button","marginLeft","flex","grid","padding","backdrop","zIndex","Auth","errorMessage","loginThunk","console","log","Dialog","fullScreen","Loaded","Grid","direction","justify","Alert","formData","themePrimaryColor","light","cyan","A100","main","A200","dark","A700","secondary","blueGrey","green","lightGreen","A400","themeBackgroundColor","paper","defaultThemeOption","typography","h1","h2","h3","h4","h5","h6","defaultTheme","createMuiTheme","loginErrorMessage","themeOptions","themeName","backgroundName","Error","themeColorOption","themeBackgroundOption","login_user","charts","cardContent","paddingBottom","graphStatistics","smallText","CryptoPrice","sm","md","Card","CardContent","ml","chartType","options","backgroundColor","colors","chartArea","vAxis","ticks","hAxis","pink","blue","portfolioCard","buttonGroup","PortfolioBalance","LinearProgress","Tooltip","Fab","SendMoneyInfo","loaded","TableRow","TableCell","scope","thumbnail","first","last","align","paddingTop","colSpan","gutterBottom","Table","TableHead","TableBody","tableContainer","SendMoneyTo","setUsersThunk","setLoaded","currentPage","setCurrentPage","userList","useEffect","setTimeout","Math","random","picture","TableContainer","Paper","Pagination","e","currency_instance","currencyAPI","from","instance","userAPI","getUsers","getRandomUser","results","news_instance","newsAPI","news","calculate","amount","result","calculate_from","calculate_to","calculate_amount","crypto","newsPicture","TabsItems","index","picSrc","desc","url","role","hidden","aria-labelledby","Chip","avatar","Link","href","target","Divider","CurrencyNews","setNewsThunk","tabIndexes","setTabIndex","tabs_panel","source","urlToImage","description","all_tab_panel","square","p","Tabs","indicatorColor","textColor","scrollButtons","event","newValue","Tab","articles","advertisment","grey","between","Advertisment","pt","minWidth","marginRight","textField","classNameStyle","FormControl","InputLabel","Select","FormHelperText","Calculator","mr","startIcon","CircularProgress","CalculatorForm","currencyExchange","amount_value","rate","values","rates","toFixed","Crypto","Folders","alignContent","minHeight","flexShrink","borderLeft","divider","drawerPaper","drawerContainer","overflow","SettingSideBar","text","ProfileSettingsForm","enableReinitialize","lookingForAJob","cursor","AvatarSetting","isDialogOpen","setDialogOpen","anchorOrigin","vertical","horizontal","showZero","large","maxWidth","DialogTitle","DialogContent","DialogContentText","DialogActions","files","accept","multiple","htmlFor","gridMargin","ProfileSettings","initialValues","flexWrap","gridList","ThemeSettings","settingAppThemeColor","settingAppThemeBackground","handleThemeColorChoose","handleThemeBackgroundChoose","GridList","GridListTile","GridListTileBar","actionIcon","FormControlLabel","control","Checkbox","checkedIcon","getState","option","assign","content","Settings","exact","path","People","React","lazy","Following","Profile","float","toolbar","mixins","Content","fallback","render","App","ThemeProvider","CssBaseline","rootReducer","combineReducers","appBarReducer","cryptoReducer","appReducer","profileReducer","peopleReducer","following","followingReducer","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","defaultValue","startAdornment","isSuccess","dataForm","followingPeople","formdata","getUserByIdThunk","Promise","all","countInfo","totalCount","FormData","append","formName","objKeys","arrayKey","toLowerCase","includes","key2","errorStack","contactsError","stopSubmit","reject"],"mappings":"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","file":"static/js/main.d6b182cd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (store) => ({\r\n    isAuth: store.app.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let RedirectComponent = (props) => {\r\n        if(!props.isAuth)\r\n            return <Redirect to={\"/auth\"}/>;\r\n            return <Component {...props} />;\r\n    };\r\n\r\n\r\n    RedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n\r\n    return RedirectComponent;\r\n};\r\n","import {PeopleType} from \"../../types/socials\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {InferActionTypes, RootStateType} from \"../rootReducer\";\r\nimport {serverAPI} from \"../../api/api\";\r\n\r\n\r\nconst initialState = {\r\n    people: [] as Array<PeopleType>,\r\n    followQueue: [] as Array<number>,\r\n    loading: false as boolean,\r\n    isCurrentUserFollowed: false,\r\n};\r\n\r\n\r\nexport type InitialStateType = typeof initialState;\r\nexport const reducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    const newState = {...state};\r\n    switch (action.type) {\r\n        case \"SET_PEOPLE_TO_STATE\":\r\n            newState.people = [...action.people];\r\n            break;\r\n        case \"FOLLOW_ACTION\":\r\n            newState.people = state.people.map(el => {\r\n                if (el.id === action.id)\r\n                    return {...el, followed: true}\r\n                return el;\r\n            })\r\n            newState.isCurrentUserFollowed = true;\r\n            break;\r\n        case \"UNFOLLOW_ACTION\":\r\n            newState.people = state.people.map(el => {\r\n                if (el.id === action.id)\r\n                    return {...el, followed: false}\r\n                return el;\r\n            })\r\n            newState.isCurrentUserFollowed = false;\r\n            break;\r\n        case \"SET_PEOPLE_LOADING\":\r\n            newState.loading = action.data;\r\n            break;\r\n        case \"GET_USER_BY_ID\":\r\n            let a;\r\n            if (state.people.length !== 0) {\r\n                a = state.people.find((item) => {\r\n                    if (item.id === action.userId)\r\n                        return item;\r\n                });\r\n                if (a)\r\n                    newState.isCurrentUserFollowed = a.followed;\r\n            }\r\n            break;\r\n        case \"SET_FOLLOW_QUEUE\":\r\n            newState.followQueue = [...state.followQueue, action.id];\r\n            break;\r\n        case \"DELETE_FOLLOW_QUEUE\":\r\n            newState.followQueue = state.followQueue.filter((el) => {\r\n                return el !== action.id;\r\n            });\r\n            break;\r\n        case \"SET_CURRENT_USER_FOLLOW_DATA\":\r\n            newState.isCurrentUserFollowed = action.follow;\r\n            break;\r\n    }\r\n\r\n    return newState;\r\n\r\n};\r\n\r\nexport default reducer;\r\n\r\n\r\nexport const actions = {\r\n    setPeopleToState: (people: Array<PeopleType>) => ({type: \"SET_PEOPLE_TO_STATE\", people} as const),\r\n    followAction: (id: number) => ({type: \"FOLLOW_ACTION\", id: id} as const),\r\n    unfollowAction: (id: number) => ({type: \"UNFOLLOW_ACTION\", id: id} as const),\r\n    setPeopleLoading: (data: boolean) => ({type: \"SET_PEOPLE_LOADING\", data: data} as const),\r\n    getUserById: (userId: number) => ({type: \"GET_USER_BY_ID\", userId} as const),\r\n    setFollowQueue: (id: number) => ({type: \"SET_FOLLOW_QUEUE\", id} as const),\r\n    deleteFollowQueue: (id: number) => ({type: \"DELETE_FOLLOW_QUEUE\", id} as const),\r\n    currentFollow: (follow: boolean) => ({type: \"SET_CURRENT_USER_FOLLOW_DATA\", follow} as const)\r\n}\r\n\r\ntype ActionType = InferActionTypes<typeof actions>;\r\ntype ThunkType = ThunkAction<void, RootStateType, any, ActionType>\r\n\r\nexport const setPeopleThunk = (page: number): ThunkType => async (dispatch) => {\r\n    dispatch(actions.setPeopleLoading(true));\r\n    let people = await serverAPI.users(page);\r\n    dispatch(actions.setPeopleToState(people.items));\r\n    dispatch(actions.setPeopleLoading(false));\r\n}\r\n\r\nexport const followingThunk = (userId: number): ThunkType => (dispatch) => {\r\n    dispatch(actions.setFollowQueue(userId));\r\n    serverAPI.follow(userId)\r\n        .then(() => {\r\n            dispatch(actions.followAction(userId));\r\n            serverAPI.isFollow(userId)\r\n                .then(res => {\r\n                    dispatch(actions.currentFollow(res));\r\n                    dispatch(actions.deleteFollowQueue(userId));\r\n                });\r\n        });\r\n}\r\n\r\nexport const unfollowingThunk = (userId: number): ThunkType => (dispatch) => {\r\n    dispatch(actions.setFollowQueue(userId));\r\n    serverAPI.unfollow(userId)\r\n        .then(() => {\r\n            dispatch(actions.unfollowAction(userId));\r\n            serverAPI.isFollow(userId)\r\n                .then(res => {\r\n                    dispatch(actions.currentFollow(res));\r\n                    dispatch(actions.deleteFollowQueue(userId));\r\n                });\r\n        })\r\n}\r\n\r\nexport const getCurrentUserFollow = (userId: number): ThunkType => (dispatch) => {\r\n    dispatch(actions.getUserById(userId));\r\n}\r\n\r\nexport const getUserFollowingInfo = (userId: number): ThunkType => (dispatch) => {\r\n    serverAPI.isFollow(userId)\r\n        .then(res => {\r\n            dispatch(actions.currentFollow(res));\r\n        });\r\n}","import Button from \"@material-ui/core/Button\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const submitButton = (isFetching: boolean, label: string, variant: \"contained\" | \"outlined\" | \"text\" | undefined, color: \"inherit\" | \"primary\" | \"secondary\" | \"default\" | undefined) => (\r\n    isFetching ?  <Button variant={variant} disabled component={\"button\"} color={color} >\r\n        <CircularProgress size={30}/>\r\n    </Button> : <Button type={\"submit\"} variant={variant} component={\"button\"} color={color} >\r\n        {label}\r\n    </Button>\r\n);","import React, {Fragment, useState} from 'react';\r\nimport {Snackbar} from \"@material-ui/core\";\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {ErrorType} from \"../../../types/errors\";\r\n\r\ntype PropsType = {\r\n    error?: ErrorType\r\n    severity?: \"info\" | \"warning\" | \"error\" | \"success\"\r\n    successAlert?: string\r\n    message?: string\r\n}\r\n\r\n\r\nconst SnackBarContainer: React.FC<PropsType> = ({severity, error, successAlert}) => {\r\n    const [open, setOpen] = useState(true);\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    };\r\n    const hasError = (error && error.resultCode !== 0);\r\n    let fullErrormessage = \"\";\r\n    if (error && error.messages.length > 0)\r\n        for (let i = 0; i < error.messages.length; i++) {\r\n            fullErrormessage += error.messages[i] + \"\\n ; \";\r\n        }\r\n    return <Fragment><Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert variant={\"filled\"} onClose={handleClose} severity={severity || hasError ? \"error\" : \"success\"}>\r\n            {(hasError && error) ?\r\n                fullErrormessage\r\n                : successAlert}\r\n        </Alert>\r\n    </Snackbar></Fragment>\r\n};\r\n\r\n\r\nexport default SnackBarContainer;","import React from \"react\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\n\r\n\r\nexport const cardBreadcrumbs = (title: string, ...args: Array<string>) => {\r\n    let breadCrumbs = args.map((el: string) => <Typography variant=\"overline\">{el}</Typography>)\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Grid container>\r\n                    <Grid item xs={6}>\r\n                        <Typography variant=\"h1\">\r\n                            <Box\r\n                                fontWeight=\"fontWeightBold\"\r\n                                color=\"textSecondary\"\r\n                                fontFamily=\"Monospace\"\r\n                            >\r\n                                {title}\r\n                            </Box>\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Breadcrumbs>\r\n                            {breadCrumbs}\r\n                        </Breadcrumbs>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport WebIcon from '@material-ui/icons/Web';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\n\r\n\r\nexport const iconHelper = (key:string) => {\r\n    switch (key) {\r\n        case 'github': return <GitHubIcon/>;\r\n        case 'facebook' : return <FacebookIcon/>;\r\n        case 'instagram' : return <InstagramIcon/>;\r\n        case 'twitter' : return <TwitterIcon/>;\r\n        case 'website' : return <WebIcon/>;\r\n        case 'youtube' : return <YouTubeIcon/>;\r\n        case 'mainLink' : return <LinkIcon/>;\r\n    }\r\n};","import React, {Fragment} from 'react';\r\nimport {Field} from \"redux-form\";\r\nimport {renderTextFieldWithIcon} from \"../../../../../utils/helpers/FormInput\";\r\nimport {SamuraiType} from \"../../../../../types/socials\";\r\n\r\n\r\ntype PropsType = {\r\n    userInfo: SamuraiType\r\n}\r\n\r\n\r\nconst FormFields: React.FC<PropsType> = ({userInfo}) => {\r\n    let fieldsArray = Object.keys(userInfo.contacts).map((el) => {\r\n        return <Field\r\n            name={`contacts.${el}`}\r\n            icon={el}\r\n            component={renderTextFieldWithIcon}\r\n            label={el}\r\n            fullWidth\r\n            type=\"text\"\r\n            key={el + \"-form\"}\r\n        />\r\n    })\r\n    return (\r\n        <Fragment>\r\n            {fieldsArray}\r\n        </Fragment>\r\n\r\n    );\r\n};\r\n\r\nexport default FormFields;","import React, {Fragment} from 'react';\r\nimport {renderField} from \"../../../../../utils/helpers/FormInput\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst BioFormField = () => {\r\n    return (\r\n        <Fragment>\r\n            <Field\r\n                name=\"aboutMe\"\r\n                component={renderField}\r\n                label={\"About me description\"}\r\n                variant={\"outlined\"}\r\n                type={\"text\"}\r\n                multiline\r\n                rows={4}\r\n                fullWidth\r\n            />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default BioFormField;","import React, {Fragment, useState} from 'react';\r\nimport {Field} from \"redux-form\";\r\nimport {renderField, renderSwitchField} from \"../../../../../utils/helpers/FormInput\";\r\n\r\ntype PropsType = {\r\n    lookingJob: boolean\r\n}\r\n\r\nconst AboutFormField: React.FC<PropsType> = ({lookingJob}) => {\r\n    const [checked, setChecked] = useState(lookingJob || false);\r\n    const handleChecked = () => {\r\n        setChecked(!checked);\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Field\r\n                checked={checked}\r\n                onChange={handleChecked}\r\n                name=\"lookingForAJob\"\r\n                component={renderSwitchField}\r\n                label={\"Are you looking for a job?\"}\r\n            />\r\n            {checked ? <Field\r\n                name=\"lookingForAJobDescription\"\r\n                component={renderField}\r\n                label={\"Looking for a job Description: \"}\r\n                fullWidth\r\n                type=\"text\"\r\n                placeholder=\"Short job description\"\r\n            /> : \"\"}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AboutFormField;","import {PeopleType} from \"../../types/socials\";\r\nimport {InferActionTypes, RootStateType} from \"../rootReducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {ResultCodeEnum, serverAPI} from \"../../api/api\";\r\n\r\nconst initialState = {\r\n    totalFollowingCount: 0,\r\n    followingUsers: null as Array<PeopleType> | null,\r\n    isFetching: false,\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst reducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    const newState = {...state};\r\n    switch (action.type) {\r\n        case \"FOLLOW/SET_FOLLOWING_USERS\":\r\n            newState.followingUsers = [...action.users];\r\n            break;\r\n        case \"FOLLOW/SET_FETCHING_DATA\":\r\n            newState.isFetching = action.fetching;\r\n            break;\r\n        case \"FOLLOW/UNFOLLOW_USER\":\r\n            if(state.followingUsers)\r\n            newState.followingUsers = state.followingUsers.filter( el => {\r\n                if (el.id !== action.id) return el\r\n            });\r\n    }\r\n    return newState;\r\n}\r\n\r\ntype ActionType = InferActionTypes<typeof actions>\r\n\r\nconst actions = {\r\n    setFollowingUsers: (users: Array<PeopleType>) => ({type: \"FOLLOW/SET_FOLLOWING_USERS\", users} as const),\r\n    setFetching: (fetching: boolean) => ({type: \"FOLLOW/SET_FETCHING_DATA\", fetching} as const),\r\n    unfollowUser: (id: number) => ({type: \"FOLLOW/UNFOLLOW_USER\", id} as const),\r\n};\r\n\r\ntype ThunkType = ThunkAction<void, RootStateType, any, ActionType>;\r\n\r\nexport const setFollowingUsersThunk = (page: number):ThunkType  =>  async (dispatch) => {\r\n    dispatch(actions.setFetching(true));\r\n    let response = await serverAPI.followingCount(10, page);\r\n    dispatch(actions.setFollowingUsers(response.items));\r\n    dispatch(actions.setFetching(false));\r\n}\r\n\r\nexport const unFollowFriend = (id: number, page: number): ThunkType => async (dispatch) => {\r\n    dispatch(actions.setFetching(true));\r\n    let response = await serverAPI.unfollow(id);\r\n    if(response.resultCode === ResultCodeEnum.Success) {\r\n        dispatch(actions.unfollowUser(id));\r\n        dispatch(actions.setFetching(false));\r\n        dispatch(setFollowingUsersThunk(page))\r\n    }\r\n}\r\n\r\nexport default reducer;","import axios, {AxiosResponse} from \"axios\";\r\nimport {PeopleType, SamuraiType} from \"../types/socials\";\r\nimport {ErrorType} from \"../types/errors\";\r\n\r\nconst login_instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"077845a8-8416-4c14-9d8d-6b3c4d32ecdc\"\r\n    }\r\n});\r\n\r\nexport type ProfilesResType = {\r\n    items: Array<PeopleType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\ntype ServerResultType<D> = {\r\n    resultCode: ResultCodeEnum,\r\n    message: Array<string>,\r\n    data: D\r\n}\r\n\r\nexport type AuthMeType = {\r\n        id: number\r\n        email: string\r\n        login: string\r\n}\r\n\r\n\r\ntype FormDataType = Omit<SamuraiType, 'photos'>;\r\n\r\nexport enum ResultCodeEnum {\r\n    Success=0 ,\r\n    Error=1\r\n}\r\n\r\nexport const serverAPI = {\r\n    login: async (email: string, password: string) => {\r\n        let response = await login_instance.post(\"auth/login\", {email, password});\r\n        return response.data;\r\n    },\r\n    me: ():Promise<ServerResultType<AuthMeType>> => {\r\n        return login_instance.get(\"auth/me\")\r\n            .then(response => response.data.data);\r\n    },\r\n    getUserById: (userId: number) => {\r\n        return login_instance.get(`/profile/${userId}`)\r\n            .then((response: AxiosResponse<SamuraiType>) => response.data);\r\n    },\r\n    users: (page: number) => {\r\n        return login_instance.get(`users?count=10&page=${page}`)\r\n            .then((response:AxiosResponse<ProfilesResType>) => response.data);\r\n    },\r\n    follow: (userId: number) :Promise<ErrorType> => {\r\n        return login_instance.post(`follow/${userId}`)\r\n            .then((response) => response.data);\r\n    },\r\n    unfollow: (userId: number) :Promise<ErrorType> => {\r\n        return login_instance.delete(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    isFollow: (userId: number) => {\r\n        return login_instance.get(`follow/${userId}`)\r\n            .then((response) => response.data);\r\n    },\r\n    updateProfile: (data: FormDataType): Promise<ErrorType> => {\r\n        return login_instance.put('profile', data)\r\n            .then(res => res.data);\r\n    },\r\n    updatePhoto: (image: any) => {\r\n        return login_instance.put('profile/photo', image, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            }\r\n        })\r\n            .then(res=>res.data);\r\n    },\r\n    followingCount: (count: number, page: number):Promise<ProfilesResType> => {\r\n        return login_instance.get(`users?friend=true&count=${count}&page=${page}`)\r\n            .then((res) => res.data);\r\n    }\r\n};\r\n\r\n\r\n","import React, {SetStateAction, useState} from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        [theme.breakpoints.up('md')]: {\r\n            width: \"calc(100% - 270px)\",\r\n        },\r\n    },\r\n    menuButton: {\r\n        [theme.breakpoints.up('md')]: {\r\n            display: \"none\",\r\n        }\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n\r\n}));\r\n\r\ntype PropsType = {\r\n    sidebarToggle: () => void\r\n}\r\n\r\nconst AppBarNavigation: React.FC<PropsType> = ({sidebarToggle}) => {\r\n    const classes = useStyle();\r\n    const [isMenuOpen, setMenuOpen] = useState(false);\r\n\r\n    const handleMenuClick: React.ReactEventHandler<SetStateAction<any>> = () => {\r\n        setMenuOpen(!isMenuOpen);\r\n    }\r\n\r\n    return (<AppBar position=\"fixed\" className={classes.appBar}>\r\n            {/*  @ts-ignore*/}\r\n            <Toolbar display=\"flex\">\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    edge=\"start\"\r\n                    onClick={sidebarToggle}\r\n                    className={classes.menuButton}>\r\n                    <MenuIcon/>\r\n                </IconButton>\r\n                <Typography variant=\"h3\" className={classes.title}>\r\n                    Logo\r\n                </Typography>\r\n                <div>\r\n                    <IconButton aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\" color=\"inherit\" onClick={handleMenuClick}>\r\n                        <Badge badgeContent={4} color=\"secondary\">\r\n                            <MailIcon/>\r\n                        </Badge>\r\n                    </IconButton>\r\n                    <IconButton edge=\"end\" aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n                        <Badge badgeContent={17} color=\"secondary\">\r\n                            <NotificationsIcon/>\r\n                        </Badge>\r\n                    </IconButton>\r\n                </div>\r\n\r\n            </Toolbar>\r\n\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default AppBarNavigation;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AppBarNavigation from \"../components/AppBarNavigation\";\r\nimport {RootStateType} from \"../redux/rootReducer\";\r\n\r\n\r\n\r\nconst mapStoreToProps = (store: RootStateType) => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  sidebarToggle: () => dispatch({ type: \"SIDEBAR_TOGGLE\" })\r\n});\r\n\r\nexport default connect(\r\n  mapStoreToProps,\r\n  mapDispatchToProps\r\n)(AppBarNavigation);\r\n\r\n","import React, {Fragment, useState} from 'react';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {SamuraiType} from \"../../../../types/socials\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        background: theme.palette.background.default\r\n    },\r\n}))\r\n\r\ntype PropsType = {\r\n    user: SamuraiType | null,\r\n    userId: number | null\r\n}\r\n\r\nconst ProfileButton: React.FC<PropsType> = ({user, userId}) => {\r\n    const [menuIsOpen, setMenuOpen] = useState(false);\r\n    const classes = useStyles();\r\n    return (\r\n        <Fragment>\r\n            <ListItem alignItems=\"flex-start\" button onClick={() => setMenuOpen(!menuIsOpen)} className={classes.root}>\r\n                <ListItemAvatar>\r\n                    {!user ? <Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40}/> :\r\n                        <Avatar alt=\"Remy Sharp\" src={user.photos.small}/>\r\n                    }\r\n                </ListItemAvatar>\r\n                <ListItemText>\r\n                    {!user ? <Skeleton animation=\"wave\" height={10} width=\"80%\" style={{marginBottom: 6}}/> :\r\n                        <Box display=\"flex\" fontSize={\"h4.fontSize\"} color={\"text.secondary\"} mt={1}>\r\n                            {user.fullName}\r\n                        </Box>}\r\n\r\n                </ListItemText>\r\n            </ListItem>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                keepMounted\r\n                open={menuIsOpen}\r\n                onClose={() => setMenuOpen(!menuIsOpen)}>\r\n                <MenuItem component={NavLink} to={`/profile/${userId}`}>\r\n                    <ListItemIcon>\r\n                        <PersonIcon fontSize=\"small\"/>\r\n                    </ListItemIcon>\r\n                    <Typography variant=\"inherit\">Profile</Typography>\r\n                </MenuItem>\r\n                <MenuItem component={NavLink} to={`/settings/profile`}>\r\n                    <ListItemIcon>\r\n                        <SettingsIcon fontSize=\"small\"/>\r\n                    </ListItemIcon>\r\n                    <Typography variant=\"inherit\">Settings</Typography>\r\n                </MenuItem>\r\n                <MenuItem>\r\n                    <ListItemIcon>\r\n                        <ExitToAppIcon fontSize=\"small\"/>\r\n                    </ListItemIcon>\r\n                    <Typography variant=\"inherit\">Log out</Typography>\r\n                </MenuItem>\r\n            </Menu>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ProfileButton;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport ProfileButton from \"./ProfileButton\";\r\nimport {RootStateType} from \"../../../../redux/rootReducer\";\r\n\r\n\r\nconst mapStoreToProps = (store: RootStateType) =>({\r\n        user: store.profile.currentUser,\r\n        userId: store.app.user\r\n});\r\n\r\n\r\nexport default connect(mapStoreToProps,{})(ProfileButton);","import React, {Fragment, useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ProfileButton from \"./ProfileButtonContainer\";\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list_components: {\r\n        paddingLeft: 60\r\n    },\r\n    menuCategory: {\r\n        paddingLeft: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nconst DashboardMenu = (props: any) => {\r\n    const [open, setOpen] = useState(false);\r\n    const handleClick = () => {\r\n        setOpen(!open);\r\n    };\r\n    const classes = useStyles();\r\n    return (\r\n        <Fragment>\r\n            <ProfileButton/>\r\n            <Typography variant={\"overline\"} color={\"secondary\"} className={classes.menuCategory}>\r\n                Main\r\n            </Typography>\r\n            <ListItem button onClick={handleClick}>\r\n                <ListItemIcon>\r\n                    <DashboardIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\"/>\r\n                {open ? <ExpandLess/> : <ExpandMore/>}\r\n            </ListItem>\r\n            <Collapse\r\n                in={open}\r\n                timeout=\"auto\"\r\n                unmountOnExit\r\n                className={classes.list_components}\r\n            >\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem button component={NavLink} to={\"/dashboard/currency\"}>\r\n                        <ListItemText>Currency</ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n            </Collapse>\r\n            <ListItem button component={NavLink} to={\"/dashboard/folders\"}>\r\n                <ListItemIcon>\r\n                    <FolderIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText>Folders</ListItemText>\r\n            </ListItem>\r\n            <Typography variant={\"overline\"} color={\"secondary\"} className={classes.menuCategory}>\r\n                Social Apps\r\n            </Typography>\r\n            <ListItem button component={NavLink} to={`/profile/${props.user || \"me\"}`}>\r\n                <ListItemIcon>\r\n                    <PersonIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText>Profile</ListItemText>\r\n            </ListItem>\r\n            <ListItem button component={NavLink} to={\"/socials/following\"}>\r\n                <ListItemIcon>\r\n                    <EmojiEmotionsIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText>Following</ListItemText>\r\n            </ListItem>\r\n            <ListItem button component={NavLink} to={\"/socials/people\"}>\r\n                <ListItemIcon>\r\n                    <GroupAddIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText>People</ListItemText>\r\n            </ListItem>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default DashboardMenu;\r\n","import React from \"react\";\r\nimport DashboardMenu from \"../../../components/Pages/components/DashboardMenu/DashboardMenu\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../../redux/rootReducer\";\r\n\r\nconst mapStoreToProps = (store: RootStateType) => ({\r\n    user: store.app.user\r\n});\r\n\r\nexport default connect(mapStoreToProps, {})(DashboardMenu);\r\n\r\n\r\n","import React from \"react\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport DashboardMenu from \"../containers/Pages/Dashboard/DashboardMenu\";\r\n\r\nconst drawerWidth = 270;\r\n\r\nconst useStyles = makeStyles((theme: any) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions,\r\n    },\r\n    overline: {\r\n        paddingLeft: 10\r\n    },\r\n    paperAnchorDockedLeft: {\r\n        border: \"none !important\",\r\n    }\r\n}));\r\n\r\nconst SideBarDrawer = (props: any) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <nav>\r\n            <Hidden mdUp implementation=\"css\">\r\n                <Drawer\r\n                    classes={{\r\n                        paperAnchorDockedLeft: classes.paperAnchorDockedLeft\r\n                    }}\r\n                    variant=\"temporary\"\r\n                    anchor={'left'}\r\n                    ModalProps={{\r\n                        keepMounted: true, // Better open performance on mobile.\r\n                    }}\r\n                    open={props.sidebar_open}\r\n                    onClose={props.sidebarToggle}\r\n                >\r\n                    <List className={classes.drawer} disablePadding={true}>\r\n                        <DashboardMenu/>\r\n                    </List>\r\n                </Drawer>\r\n            </Hidden>\r\n            <Hidden smDown implementation=\"css\">\r\n                <Drawer classes={{\r\n                    paperAnchorDockedLeft: classes.paperAnchorDockedLeft\r\n                }}\r\n                        variant=\"permanent\"\r\n                        open>\r\n                    <List className={classes.drawer} disablePadding={true}>\r\n                        <DashboardMenu/>\r\n                    </List>\r\n                </Drawer>\r\n            </Hidden>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default SideBarDrawer;\r\n","import React from \"react\";\r\nimport SideBarDrawer from \"../components/SideBarDrawer\";\r\nimport { connect } from \"react-redux\";\r\nimport {RootStateType} from \"../redux/rootReducer\";\r\n\r\nconst mapStoreToProps = (store:RootStateType) => ({\r\n  sidebar_open: store.appBar.sidebar_open\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n  sidebarToggle: () => dispatch({ type: \"SIDEBAR_TOGGLE\" })\r\n});\r\n\r\nexport default connect(\r\n  mapStoreToProps,\r\n  mapDispatchToProps\r\n)(SideBarDrawer);\r\n","import {FormErrors} from \"redux-form\";\r\n\r\nexport const required = (value:FormProps) => {\r\n    if(value)\r\n        return undefined;\r\n    return \"Field is required\";\r\n};\r\n\r\ntype FormProps = {\r\n    from : string\r\n    to: string\r\n}\r\n// 'ConfigProps<FormProps, {}, string> | Partial<ConfigProps<FormProps, {}, string>>'\r\nexport const comparison = (values: FormProps): FormErrors<FormProps> => {\r\n    const errors: FormErrors<FormProps> = {};\r\n    if(values.from === values.to){\r\n        errors.from = \"Same field\";\r\n        errors.to = \"Same field\";\r\n    }\r\n        return errors;\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators/validator\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    root: {\r\n        alignSelf: \"center\",\r\n        width: \"50%\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            width: \"90%\"\r\n        },\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(3),\r\n        alignSelf: \"center\",\r\n    }\r\n}));\r\n\r\ntype RenderTextType = {\r\n    label: string\r\n    iconButton: string\r\n    input: string\r\n    meta: {\r\n        touched: any\r\n        error: any\r\n    }\r\n    custom: any,\r\n}\r\n\r\nconst renderTextField: React.FC<RenderTextType> = ({label, iconButton, input, meta: {touched, error}, ...custom}) => {\r\n    const hasError = touched && error;\r\n    return <TextField\r\n        error={hasError}\r\n        {...input}\r\n        {...custom}\r\n        label={label}\r\n        helperText={hasError && error}\r\n        variant=\"outlined\"\r\n        InputProps={{\r\n            endAdornment: (\r\n                iconButton\r\n            ),\r\n        }}\r\n    />\r\n};\r\n\r\nconst LoginForm = (props: any) => {\r\n    const classes = useStyle();\r\n    const [passwordIsVisible, setPasswordVisible] = useState(false);\r\n\r\n    return <form onSubmit={props.handleSubmit} style={{width: \"100%\", display: \"flex\", flexDirection: \"column\"}}>\r\n        <Field name={\"login\"} component={renderTextField}\r\n\r\n               validate={[\r\n                   required\r\n               ]}\r\n               className={classes.root}\r\n               label={\"Login\"}\r\n               iconButton={<InputAdornment position=\"start\">\r\n                   <AccountCircleIcon/>\r\n               </InputAdornment>}/>\r\n        <Field name={\"password\"} component={renderTextField}\r\n               type={passwordIsVisible ? \"text\" : \"password\"}\r\n               validate={[\r\n                   required\r\n               ]}\r\n               className={classes.root}\r\n               label={\"Password\"}\r\n               iconButton={<InputAdornment position=\"end\">\r\n                   <IconButton\r\n                       aria-label=\"toggle password visibility\"\r\n                       edge=\"end\"\r\n                       onClick={() => setPasswordVisible(!passwordIsVisible)}\r\n                   >\r\n                       {passwordIsVisible ? <Visibility/> : <VisibilityOff/>}\r\n                   </IconButton>\r\n               </InputAdornment>}\r\n        />\r\n\r\n        <Box display={\"flex\"} m={3} justifyContent={\"center\"}>\r\n            <Button type={\"submit\"} variant=\"contained\" component={\"button\"} color=\"primary\" size=\"large\"\r\n                    className={classes.margin}>\r\n                Sign In\r\n            </Button>\r\n            <Button variant=\"outlined\" color=\"primary\" size=\"large\" className={classes.margin}>\r\n                Sign Up\r\n            </Button>\r\n        </Box>\r\n    </form>\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login',\r\n})(LoginForm);\r\n\r\n\r\nexport default LoginReduxForm;","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LoginReduxForm from \"./LoginForm\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Loaded from \"../../Loaded\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n    grid: {\r\n        marginTop: theme.spacing(15),\r\n        padding: theme.spacing(5),\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 10,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\ntype AuthProps = {\r\n    isAuth: boolean,\r\n    errorMessage: Array<string> | null | string,\r\n    loading: boolean,\r\n    user: number | null\r\n    login: (login_data: string, password_data: string) => void\r\n    loginThunk: (login_data: string, password_data: string) => void\r\n}\r\n\r\nconst Auth: React.FC<AuthProps> = ({\r\n                                       isAuth, errorMessage,\r\n                                       loading, user,\r\n                                       login, loginThunk,\r\n                                       ...props\r\n                                   }) => {\r\n    const classes = useStyles();\r\n    console.log(user);\r\n    if (isAuth && user)\r\n        return <Redirect to={`/profile/${user}`}/>;\r\n    return <div>\r\n        <Dialog fullScreen open={true}>\r\n            {(loading) && <Loaded/>}\r\n\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h4\" className={classes.title}>\r\n                        Login\r\n                    </Typography>\r\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"close\">\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Grid container\r\n                  direction=\"column\"\r\n                  justify=\"center\"\r\n                  alignItems=\"center\"\r\n                  className={classes.grid}\r\n            >\r\n                <Typography variant={\"h1\"}>LOGO</Typography>\r\n                <Typography variant={\"h2\"}>\r\n                    Sign In\r\n                </Typography>\r\n                <Typography variant={\"body2\"}> If you want to sign in as a test user </Typography>\r\n                <Typography variant={\"caption\"}>Login: test_react_app</Typography>\r\n                <Typography variant={\"caption\"}>Password: 11111 </Typography>\r\n                {(!isAuth && errorMessage) &&\r\n                <Alert variant=\"filled\" severity=\"error\">\r\n                    {errorMessage}\r\n                </Alert>}\r\n                <LoginReduxForm onSubmit={(formData: any) => loginThunk(formData.login, formData.password)}/>\r\n            </Grid>\r\n        </Dialog>\r\n    </div>\r\n};\r\n\r\nexport default Auth;","import {createMuiTheme, ThemeOptions} from \"@material-ui/core/styles\";\r\nimport cyan from \"@material-ui/core/colors/cyan\";\r\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\r\nimport lightGreen from \"@material-ui/core/colors/lightGreen\";\r\nimport {PaletteOptions} from \"@material-ui/core/styles/createPalette\";\r\n\r\nexport const typography = {\r\n        h1:{\r\n            fontSize: 25,\r\n        },\r\n        h2:{\r\n            fontSize: 23,\r\n        },\r\n        h3:{\r\n            fontSize: 20,\r\n        },\r\n        h4:{\r\n            fontSize: 17,\r\n        },\r\n        h5: {\r\n            fontSize: 14,\r\n        },\r\n        h6:{\r\n            fontSize: 12,\r\n        },\r\n        button:{\r\n            fontWeight: 700\r\n        },\r\n        fontSize: 14\r\n    };\r\n\r\nexport const themePrimaryColor = {\r\n    default: {\r\n        primary: {\r\n            light: cyan.A100,\r\n            main: cyan.A200,\r\n            dark: cyan.A700\r\n        },\r\n        secondary: {\r\n            light: blueGrey[200],\r\n            main: blueGrey[500],\r\n            dark: blueGrey[900],\r\n        },\r\n        type: \"dark\",\r\n    } as PaletteOptions,\r\n    green: {\r\n        primary: {\r\n            light: lightGreen.A200,\r\n            main: lightGreen.A400,\r\n            dark: lightGreen.A700\r\n        },\r\n        secondary: {\r\n            light: blueGrey[200],\r\n            main: blueGrey[500],\r\n            dark: blueGrey[900],\r\n        },\r\n        type: \"dark\",\r\n    } as PaletteOptions\r\n};\r\n\r\n\r\nexport const themeBackgroundColor = {\r\n    default: {\r\n        default: \"#323232\",\r\n        paper: \"#212121\",\r\n    },\r\n    blueGrey: {\r\n        default: blueGrey[700],\r\n        paper: blueGrey[900],\r\n    }\r\n};\r\n\r\n\r\nexport const defaultThemeOption:ThemeOptions = {\r\n    palette: {\r\n        primary: {\r\n            light: cyan.A100,\r\n            main: cyan.A200,\r\n            dark: cyan.A700\r\n        },\r\n        secondary: {\r\n            light: blueGrey[200],\r\n            main: blueGrey[500],\r\n            dark: blueGrey[900],\r\n        },\r\n        background: {\r\n            default: \"#323232\",\r\n            paper: \"#212121\",\r\n        },\r\n        type: \"dark\",\r\n    },\r\n    typography: typography,\r\n\r\n};\r\n\r\nexport const defaultTheme = createMuiTheme(defaultThemeOption);\r\n\r\n\r\n","import {ResultCodeEnum, serverAPI} from \"../api/api\";\r\nimport {ErrorType} from \"../types/errors\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {InferActionTypes, RootStateType} from \"./rootReducer\";\r\nimport {defaultTheme, defaultThemeOption, themeBackgroundColor, themePrimaryColor} from \"../utils/theme\";\r\nimport {createMuiTheme} from \"@material-ui/core/styles\";\r\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\r\n\r\nconst initialState = {\r\n    isAuth: false as boolean,\r\n    user: null as number | null,\r\n    loginErrorMessage: \"\" as Array<string> | null | string,\r\n    loading: false as boolean,\r\n    theme: {\r\n        ...defaultTheme\r\n    },\r\n    themeOptions: {\r\n        ...defaultThemeOption,\r\n    },\r\n    themeName: 'default',\r\n    backgroundName: 'default',\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\n\r\nconst reducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    const newState = {...state};\r\n    switch (action.type) {\r\n        case \"LOGIN\":\r\n            if (action.data.resultCode === ResultCodeEnum.Error || !action.data) {\r\n                newState.loading = false;\r\n                newState.isAuth = false;\r\n                newState.loginErrorMessage = [...action.data.messages];\r\n            } else {\r\n                newState.user = action.data.data.userId;\r\n                newState.isAuth = true;\r\n            }\r\n            break;\r\n        case \"LOADING\":\r\n            newState.loading = action.data;\r\n            break;\r\n        case \"SET_THEME_COLOR\":\r\n            newState.themeName = action.themeName;\r\n            newState.themeOptions = {...action.theme};\r\n            const themeColorOption = createMuiTheme(action.theme);\r\n            newState.theme = {...themeColorOption};\r\n            break;\r\n\r\n        case \"SET_THEME_BACKGROUND\":\r\n            newState.backgroundName = action.backgroundName;\r\n            newState.themeOptions = {...action.theme};\r\n            const themeBackgroundOption = createMuiTheme(action.theme);\r\n            newState.theme = {...themeBackgroundOption};\r\n            break;\r\n    }\r\n    return newState;\r\n};\r\n\r\n\r\nexport default reducer;\r\n\r\nexport const actions = {\r\n    setLogin: (data: ErrorType) => ({type: \"LOGIN\", data} as const),\r\n    setLoading: (loading: boolean) => ({type: \"LOADING\", data: loading} as const),\r\n    setThemeColor: (theme: any, themeName: string) => ({type: \"SET_THEME_COLOR\", theme, themeName} as const),\r\n    setThemeBackground: (theme: any, backgroundName: string) => ({\r\n        type: \"SET_THEME_BACKGROUND\",\r\n        theme,\r\n        backgroundName\r\n    } as const)\r\n};\r\n\r\ntype ActionType = InferActionTypes<typeof actions>\r\ntype ThunkType = ThunkAction<void, RootStateType, any, ActionType>;\r\nexport const loginThunk = (email: string, password: string): ThunkType => (dispatch) => {\r\n    dispatch(actions.setLoading(true));\r\n   serverAPI.login(email, password)\r\n        .then((login_user) => {\r\n                dispatch(actions.setLogin(login_user));\r\n                dispatch(actions.setLoading(false));\r\n            }\r\n        );\r\n};\r\n\r\nexport const settingAppThemeColor = (themeName: string): ThunkType => (dispatch, getState) => {\r\n    let option = Object.assign({}, getState().app.themeOptions);\r\n    switch (themeName) {\r\n        case 'default':\r\n            option.palette = Object.assign(option.palette, themePrimaryColor.default);\r\n            dispatch(actions.setThemeColor(option, themeName));\r\n            break;\r\n        case 'green':\r\n            option.palette = Object.assign(option.palette, themePrimaryColor.green);\r\n            dispatch(actions.setThemeColor(option, themeName));\r\n            break;\r\n    }\r\n};\r\n\r\nexport const settingAppThemeBackground = (backgroundName: string): ThunkType => (dispatch, getState) => {\r\n    let option = Object.assign({}, getState().app.themeOptions);\r\n    switch (backgroundName) {\r\n        case 'default':\r\n            option.palette = Object.assign(option.palette, {background: themeBackgroundColor.default});\r\n            dispatch(actions.setThemeBackground(option, backgroundName));\r\n            break;\r\n        case 'blueGrey':\r\n            option.palette = Object.assign(option.palette, {background: themeBackgroundColor.blueGrey});\r\n            dispatch(actions.setThemeBackground(option, backgroundName));\r\n            break;\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Auth from \"../components/Pages/Auth/Auth\";\r\nimport {loginThunk} from \"../redux/appReducer\";\r\nimport {RootStateType} from \"../redux/rootReducer\";\r\nimport {PeopleType, SamuraiType} from \"../types/socials\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean,\r\n    errorMessage: Array<string> | null | string,\r\n    loading: boolean,\r\n    user: number | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    loginThunk: (login_data: string, password_data: string) => void,\r\n\r\n}\r\n\r\nconst mapStoreToProps = (store: RootStateType) => ({\r\n    isAuth: store.app.isAuth,\r\n    errorMessage: store.app.loginErrorMessage,\r\n    loading: store.app.loading,\r\n    user: store.app.user\r\n});\r\n\r\n//TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultRootState\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {},  RootStateType>(mapStoreToProps, { loginThunk})(Auth);","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Chart from \"react-google-charts\";\r\nimport lightGreen from \"@material-ui/core/colors/lightGreen\";\r\nimport pink from \"@material-ui/core/colors/pink\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\nconst useStyle = makeStyles({\r\n    grid: {\r\n        marginTop: 10\r\n    },\r\n    charts: {\r\n        padding: 0,\r\n        margin: 0,\r\n        width: \"100%\",\r\n        height: 120,\r\n        border: \"none\",\r\n    },\r\n    cardContent: {\r\n        padding: 0,\r\n        paddingBottom: \"0 !important\",\r\n    },\r\n    graphStatistics: {\r\n        marginLeft: 20,\r\n        marginTop: 20,\r\n    },\r\n    smallText: {\r\n        marginLeft: 20,\r\n    }\r\n});\r\n\r\nconst CryptoPrice = () => {\r\n    const classes = useStyle();\r\n\r\n    return (\r\n        <Grid container spacing={2} className={classes.grid}>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n                <Card>\r\n                    <CardContent className={classes.cardContent}>\r\n                        <Typography component=\"div\" className={classes.graphStatistics}>\r\n                            <Box display={\"inline\"} fontSize={\"h3.fontSize\"}>\r\n                                $9.845\r\n                            </Box>\r\n                            <Badge badgeContent={<ArrowDropUpIcon/>} color={\"default\"}>\r\n                                <Box display={\"inline\"} fontSize={\"body2.fontSize\"} ml={1} component={\"span\"}>\r\n                                    27%\r\n                                </Box>\r\n                            </Badge>\r\n                        </Typography>\r\n                        {/*  @ts-ignore*/}\r\n                        <Typography variant={\"caption\"} color={\"primary\"} spacing={\"2\"} className={classes.smallText}>\r\n                            Bitcoin Price\r\n                        </Typography>\r\n                        <Chart\r\n                            chartType=\"AreaChart\"\r\n                            data={[['Year', 'Sales'],\r\n                                ['2013', 650],\r\n                                ['2014', 400],\r\n                                ['2015', 660],\r\n                                ['2016', 200],\r\n                                ['2017', 800],\r\n                                ['2018', 750]]}\r\n                            className={classes.charts}\r\n                            options={{\r\n                                backgroundColor: \"transparent\",\r\n                                colors: [lightGreen.A400, 'white'],\r\n                                chartArea: {width: \"100%\", height: \"100%\"},\r\n                                vAxis: {\r\n                                    ticks: []\r\n                                },\r\n                                hAxis: {\r\n                                    ticks: []\r\n                                }\r\n                            }}\r\n                        />\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n                <Card>\r\n                    <CardContent className={classes.cardContent}>\r\n                        <Typography component=\"div\" className={classes.graphStatistics}>\r\n                            <Box display={\"inline\"} fontSize={\"h3.fontSize\"}>\r\n                                $7.546\r\n                            </Box>\r\n                            <Badge badgeContent={<ArrowDropDownIcon/>} color={\"default\"}>\r\n                                <Box display={\"inline\"} fontSize={\"body2.fontSize\"} ml={1} component={\"span\"}>\r\n                                    0.7%\r\n                                </Box>\r\n                            </Badge>\r\n                        </Typography>\r\n                        {/*//@ts-ignore*/}\r\n                        <Typography variant={\"caption\"} color={\"primary\"} spacing={\"2\"} className={classes.smallText}>\r\n                            Bitcoin Price\r\n                        </Typography>\r\n                        <Chart\r\n                            chartType=\"AreaChart\"\r\n                            data={[['Year', 'Sales'],\r\n                                ['2013', 10],\r\n                                ['2014', 240],\r\n                                ['2015', 50],\r\n                                ['2016', 450],\r\n                                ['2017', 30],\r\n                                ['2018', 200]]}\r\n                            className={classes.charts}\r\n                            options={{\r\n                                backgroundColor: \"transparent\",\r\n                                colors: [pink.A200],\r\n                                chartArea: {width: \"100%\", height: \"100%\"},\r\n                                vAxis: {\r\n                                    ticks: []\r\n                                },\r\n                                hAxis: {\r\n                                    ticks: []\r\n                                }\r\n                            }}\r\n                        />\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n                <Card>\r\n                    <CardContent className={classes.cardContent}>\r\n                        <Typography component=\"div\" className={classes.graphStatistics}>\r\n                            <Box display={\"inline\"} fontSize={\"h3.fontSize\"}>\r\n                                $1.123\r\n                            </Box>\r\n                            <Badge badgeContent={<ArrowDropUpIcon/>} color={\"default\"}>\r\n                                <Box display={\"inline\"} fontSize={\"body2.fontSize\"} ml={1} component={\"span\"}>\r\n                                    10%\r\n                                </Box>\r\n                            </Badge>\r\n                        </Typography>\r\n                        {/*//@ts-ignore*/}\r\n                        <Typography variant={\"caption\"} color={\"primary\"} spacing={\"2\"} className={classes.smallText}>\r\n                            Bitcoin Price\r\n                        </Typography>\r\n                        <Chart\r\n                            chartType=\"AreaChart\"\r\n                            data={[['Year', 'Sales'],\r\n                                ['2012', 150],\r\n                                ['2013', 560],\r\n                                ['2014', 200],\r\n                                ['2015', 500],\r\n                                ['2016', 100],]}\r\n                            className={classes.charts}\r\n                            options={{\r\n                                backgroundColor: \"transparent\",\r\n                                colors: [blue[500]],\r\n                                chartArea: {width: \"100%\", height: \"100%\"},\r\n                                vAxis: {\r\n                                    ticks: []\r\n                                },\r\n                                hAxis: {\r\n                                    ticks: []\r\n                                }\r\n                            }}\r\n                        />\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n                <Card>\r\n                    <CardContent className={classes.cardContent}>\r\n                        <Typography component=\"div\" className={classes.graphStatistics}>\r\n                            <Box display={\"inline\"} fontSize={\"h3.fontSize\"}>\r\n                                $1.123\r\n                            </Box>\r\n                            <Badge badgeContent={<ArrowDropUpIcon/>} color={\"default\"}>\r\n                                <Box display={\"inline\"} fontSize={\"body2.fontSize\"} ml={1} component={\"span\"}>\r\n                                    10%\r\n                                </Box>\r\n                            </Badge>\r\n                        </Typography>\r\n                        {/*//@ts-ignore*/}\r\n                        <Typography variant={\"caption\"} color={\"primary\"} spacing={\"2\"} className={classes.smallText}>\r\n                            Bitcoin Price\r\n                        </Typography>\r\n                        <Chart\r\n                            chartType=\"AreaChart\"\r\n                            data={[['Year', 'Sales'],\r\n                                ['2012', 150],\r\n                                ['2013', 560],\r\n                                ['2014', 200],\r\n                                ['2015', 500],\r\n                                ['2016', 100],]}\r\n                            className={classes.charts}\r\n                            options={{\r\n                                backgroundColor: \"transparent\",\r\n                                colors: [blue[500], \"red\"],\r\n                                chartArea: {width: \"100%\", height: \"100%\"},\r\n                                vAxis: {\r\n                                    ticks: []\r\n                                },\r\n                                hAxis: {\r\n                                    ticks: []\r\n                                }\r\n                            }}\r\n                        />\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default CryptoPrice;\r\n","import React from \"react\";\r\nimport {Button, Card, CardContent, Grid, Typography} from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport ArrowDropUpIcon from \"@material-ui/icons/ArrowDropUp\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nconst useStyle = makeStyles({\r\n    portfolioCard: {\r\n        marginTop: 20,\r\n    },\r\n    buttonGroup: {\r\n        marginLeft: 10\r\n    }\r\n});\r\n\r\n\r\nconst PortfolioBalance = () => {\r\n    const classes = useStyle();\r\n    return <Card className={classes.portfolioCard}>\r\n        <CardContent>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                    <Typography variant={\"h4\"}>\r\n                        Your Portfolio Balance\r\n                    </Typography>\r\n                    <Typography component=\"div\">\r\n                        <Box display={\"inline\"} fontSize={\"h3.fontSize\"}>\r\n                            $1.123\r\n                        </Box>\r\n                        <Badge badgeContent={<ArrowDropUpIcon/>} color={\"default\"}>\r\n                            <Box display={\"inline\"} fontSize={\"body2.fontSize\"} ml={1} component={\"span\"}>\r\n                                10%\r\n                            </Box>\r\n                        </Badge>\r\n                    </Typography>\r\n                    <Typography variant={\"body2\"} color={\"secondary\"}>\r\n                        Overall balance\r\n                    </Typography>\r\n                    <Box mt={2}>\r\n                        <Button variant=\"outlined\" size={\"small\"} color={\"primary\"}>\r\n                            open\r\n                        </Button>\r\n                        <Button variant=\"outlined\" color={\"inherit\"} size={\"small\"} className={classes.buttonGroup}>\r\n                            Delete\r\n                        </Button>\r\n                    </Box>\r\n\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                    <Box mt={2}>\r\n                        <Typography variant={\"caption\"} color={\"secondary\"}>\r\n                            Portfolio Distribution\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                        <Typography variant={\"overline\"}>\r\n                            BTC | 8.74\r\n                            <LinearProgress variant=\"determinate\" value={70}/>\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                        <Typography variant={\"overline\"}>\r\n                            BTC | 8.74\r\n                            <LinearProgress variant=\"determinate\" value={60}/>\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                        <Typography variant={\"overline\"}>\r\n                            BTC | 8.74\r\n                            <LinearProgress variant=\"determinate\" value={20}/>\r\n                        </Typography>\r\n                    </Box>\r\n\r\n\r\n                </Grid>\r\n                <Box mt={2}>\r\n                    <Tooltip title=\"Add new wallet\" aria-label=\"add\">\r\n                        <Fab color=\"primary\">\r\n                            <AddIcon/>\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </Box>\r\n            </Grid>\r\n        </CardContent>\r\n    </Card>\r\n\r\n};\r\n\r\nexport default PortfolioBalance;","import React, {Fragment, useState} from \"react\";\r\nimport {\r\n    Avatar,\r\n    Collapse,\r\n    Grid,\r\n    IconButton,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\n\r\ntype PropsType = {\r\n    loaded: boolean\r\n    image: {\r\n        thumbnail: string\r\n    }\r\n    name: {\r\n        first: string,\r\n        last: string\r\n    }\r\n}\r\n\r\nconst SendMoneyInfo: React.FC<PropsType> = ({loaded, image, name}) => {\r\n    const [open, setOpen] = useState(false);\r\n    const handleClick = () => {\r\n        setOpen(!open);\r\n    };\r\n    return <Fragment><TableRow>\r\n        <TableCell>\r\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={handleClick}>\r\n                {open ? <KeyboardArrowUpIcon/> : <KeyboardArrowDownIcon/>}\r\n            </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n            <Grid container>\r\n                {loaded ? <Avatar component={\"span\"} src={image.thumbnail} alt=\"Remy Sharp\"/> :\r\n                    <Skeleton variant={\"circle\"}>\r\n                        <Avatar/>\r\n                    </Skeleton>}\r\n\r\n                <Box m={1} width={\"60%\"}>\r\n                    {\r\n                        loaded ? <Typography variant={\"caption\"}> {name.first + ' ' + name.last}</Typography> :\r\n                            <Skeleton width={\"100%\"}>\r\n                                <Typography>.</Typography>\r\n                            </Skeleton>\r\n                    }\r\n\r\n                </Box>\r\n            </Grid>\r\n        </TableCell>\r\n        <TableCell align=\"right\">\r\n            {\r\n                loaded ? <Typography variant={\"caption\"}> 2020/12/12</Typography> : <Skeleton width={\"100%\"}>\r\n                    <Typography>.</Typography>\r\n                </Skeleton>\r\n            }\r\n        </TableCell>\r\n        <TableCell align=\"right\">\r\n            {\r\n                loaded ? <Typography variant={\"caption\"}> pay</Typography> : <Skeleton width={\"100%\"}>\r\n                    <Typography>.</Typography>\r\n                </Skeleton>\r\n            }\r\n        </TableCell>\r\n    </TableRow>\r\n        <TableRow>\r\n            <TableCell style={{paddingBottom: 0, paddingTop: 0}} colSpan={6}>\r\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                    <Box margin={1}>\r\n                        <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                            History\r\n                        </Typography>\r\n                        <Table size=\"small\" aria-label=\"purchases\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Date</TableCell>\r\n                                    <TableCell>Customer</TableCell>\r\n                                    <TableCell align=\"right\">Amount</TableCell>\r\n                                    <TableCell align=\"right\">Total price ($)</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        <Skeleton width={\"100%\"}>\r\n                                            <Typography>.</Typography>\r\n                                        </Skeleton>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Skeleton width={\"100%\"}>\r\n                                            <Typography>.</Typography>\r\n                                        </Skeleton>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <Skeleton width={\"100%\"}>\r\n                                            <Typography>.</Typography>\r\n                                        </Skeleton>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <Skeleton width={\"100%\"}>\r\n                                            <Typography>.</Typography>\r\n                                        </Skeleton>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Box>\r\n                </Collapse>\r\n            </TableCell>\r\n        </TableRow>\r\n    </Fragment>\r\n};\r\n\r\n\r\nexport default SendMoneyInfo;","import React, {useEffect, useState} from \"react\";\r\nimport {Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport SendMoneyInfo from \"./SendMoneyInfo\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport {UserType} from \"../../../../../types/socials\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    tableContainer: {\r\n        marginTop: theme.spacing(3)\r\n    }\r\n}));\r\n\r\ntype PropsType = {\r\n    users: Array<UserType>\r\n    setUsersThunk: (currentPage: number) => void\r\n}\r\n\r\nconst SendMoneyTo: React.FC<PropsType> = ({users, setUsersThunk}) => {\r\n\r\n    const classes = useStyle();\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        setLoaded(false);\r\n        setUsersThunk(currentPage);\r\n        setTimeout(() => setLoaded(true), 1000);\r\n    }, [currentPage]);\r\n    let userList;\r\n    if (users) {\r\n        userList = users.map(el =>\r\n            <SendMoneyInfo key={el.id.value + \"324nnsdkl\" + Math.random() * 100 / 3} loaded={loaded} name={el.name}\r\n                           image={el.picture}/>\r\n        );\r\n    }\r\n    return <TableContainer component={Paper} className={classes.tableContainer}>\r\n        <Box m={2} fontSize={\"h3.fontSize\"}>\r\n            Send Money To\r\n        </Box>\r\n        <Table aria-label=\"collapsible table\">\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell/>\r\n                    <TableCell>Account Holder Name</TableCell>\r\n                    <TableCell align=\"right\">Last transfer</TableCell>\r\n                    <TableCell align=\"right\">Action</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {userList}\r\n            </TableBody>\r\n        </Table>\r\n        <Pagination count={10} onChange={(e, page) => setCurrentPage(page)}/>\r\n    </TableContainer>\r\n};\r\n\r\n\r\nexport default SendMoneyTo;","import axios from \"axios\";\r\n\r\nconst currency_instance = axios.create({\r\n    baseURL: \"https://api.ratesapi.io/api/\",\r\n})\r\n\r\n\r\ntype CurrencyResType = {\r\n    base: string\r\n    date: string\r\n    rates: {\r\n        CAD?: number\r\n        HKD?: number\r\n        ISK?: number\r\n        PHP?: number\r\n        DKK?: number\r\n        HUF?: number\r\n        CZK?: number\r\n        AUD?: number\r\n        RON?: number\r\n        SEK?: number\r\n        IDR?: number\r\n        INR?: number\r\n        BRL?: number\r\n        RUB?: number\r\n        HRK?: number\r\n        JPY?: number\r\n        THB?: number\r\n        CHF?: number\r\n        SGD?: number\r\n        PLN?: number\r\n        BGN?: number\r\n        TRY?: number\r\n        CNY?: number\r\n        NOK?: number\r\n        NZD?: number\r\n        ZAR?: number\r\n        USD?: number\r\n        MXN?: number\r\n        ILS?: number\r\n        GBP?: number\r\n        KRW?: number\r\n        MYR?: number\r\n    }\r\n}\r\n\r\nexport const currencyAPI = {\r\n    getCurrencyExchange: (from: string, to: string): Promise<CurrencyResType> =>{\r\n        return currency_instance.get(`latest?base=${from}&symbols=${to}`)\r\n            .then(response=>response.data)\r\n    }\r\n}\r\n\r\n","import axios from \"axios\";\r\nimport {UserType} from \"../types/socials\";\r\n\r\ntype UserResType = {\r\n    results: Array<UserType>\r\n    info: {\r\n        seed: string\r\n        results: number\r\n        page: number\r\n        version: string\r\n    }\r\n}\r\n\r\nexport const instance = axios.create({\r\n    baseURL: \"https://randomuser.me/api/\",\r\n});\r\n\r\nexport const userAPI = {\r\n    getUsers: async (currentPage: number): Promise<UserResType> => {\r\n        let response = await instance.get(`/?page=${currentPage}&results=10&seed=abc`);\r\n        return response.data;\r\n    },\r\n    getRandomUser: async (): Promise<UserResType> => {\r\n        let response = await instance.get('/?gender=female&nat=us,dk,fr,gb');\r\n        return response.data.results[0];\r\n    },\r\n};","import axios from \"axios\";\r\nimport {NewsType} from \"../types/socials\";\r\n\r\nconst news_instance = axios.create({\r\n    baseURL: \"https://newsapi.org/v2/\"\r\n});\r\n\r\ntype NewsResType = {\r\n    status: string\r\n    totalResults: number\r\n    articles: Array<NewsType>\r\n}\r\n\r\nexport const newsAPI = {\r\n    getNews: (): Promise<NewsResType> => {\r\n        return news_instance.get(\"everything?q=currency&pageSize=5&apiKey=e4d0f150f8f54c878a0935c9af7e9798\")\r\n            .then((response) => response.data);\r\n\r\n    },\r\n}","import {currencyAPI} from \"../../api/currency-api\";\r\nimport {NewsType, UserType} from \"../../types/socials\";\r\nimport {InferActionTypes, RootStateType} from \"../rootReducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {userAPI} from \"../../api/user-api\";\r\nimport {newsAPI} from \"../../api/news-api\";\r\n\r\n\r\nconst initialState = {\r\n    loaded: false,\r\n    currentPage: 1,\r\n    users: [] as Array<UserType>,\r\n    news: [] as Array<NewsType>,\r\n    calculate: {\r\n        loading: false,\r\n        from: null as string | null,\r\n        to:  null as string | null,\r\n        amount: 1,\r\n        result: 0\r\n    }\r\n\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst reducer = (state = initialState, action: ActionType): InitialStateType =>{\r\n    const newState = {...state};\r\n    newState.calculate = {...state.calculate};\r\n    switch(action.type){\r\n        case \"SET_LOADED_VALUE\":\r\n            newState.loaded = action.loaded;\r\n            break;\r\n        case \"SET_CURRENT_PAGE\":\r\n            newState.currentPage = action.currentPage;\r\n            break;\r\n        case \"SET_USERS\" :\r\n            newState.users = [...action.users];\r\n            console.log(newState);\r\n            break;\r\n        case \"SET_NEWS\":\r\n            newState.news = [...action.news];\r\n            break;\r\n        case \"SET_CURRENCY_DATA\":\r\n            newState.calculate.from = action.from;\r\n            newState.calculate.to = action.to;\r\n            newState.calculate.amount = action.amount;\r\n            break;\r\n        case \"SET_CURRENCY_RESULT\":\r\n            newState.calculate.result = action.result;\r\n            break;\r\n        case \"SET_CALCULATE_LOADING\":\r\n            newState.calculate.loading = action.loading;\r\n            break;\r\n    }\r\n    return newState;\r\n};\r\n\r\n\r\nexport default reducer;\r\n\r\nexport const actions = {\r\n    setUsersAction: (users: Array<UserType>) => ({type: \"SET_USERS\", users} as const),\r\n    setCurrentPageAction: (currentPage: number) => ({type: \"SET_CURRENT_PAGE\", currentPage} as const),\r\n    setLoadedValueAction: (data: boolean) => ({type: \"SET_LOADED_VALUE\", loaded: data} as const),\r\n    setNewsAction: (news: Array<NewsType>) => ({type: \"SET_NEWS\", news} as const),\r\n    setCalculateData: (calculate_from: string, calculate_to: string, calculate_amount: number) => ({type: \"SET_CURRENCY_DATA\", from: calculate_from, to: calculate_to, amount: calculate_amount} as const),\r\n    setCurrencyResult: (result: number) => ({type: \"SET_CURRENCY_RESULT\", result} as const),\r\n    setCalculateLoading: (loading: boolean) => ({type: \"SET_CALCULATE_LOADING\", loading} as const)\r\n}\r\n\r\ntype ActionType = InferActionTypes<typeof actions>\r\ntype ThunkType = ThunkAction<Promise<void>, RootStateType, any, ActionType>\r\n\r\nexport const setUsersThunk = (currentPage: number):ThunkType => async (dispatch) => {\r\n    let users = await userAPI.getUsers(currentPage);\r\n    dispatch(actions.setUsersAction(users.results));\r\n}\r\n\r\nexport const setNewsThunk =() : ThunkAction<void, RootStateType, any, ActionType> => async (dispatch) => {\r\n    let news = await newsAPI.getNews();\r\n    dispatch(actions.setNewsAction(news.articles));\r\n}\r\n\r\nexport const currencyExchange = (from: string, to: string, amount: number) : ThunkType => async (dispatch) => {\r\n    dispatch(actions.setCalculateLoading(true));\r\n    let amount_value = amount || 1;\r\n    dispatch(actions.setCalculateData(from, to, amount_value));\r\n    let response = await currencyAPI.getCurrencyExchange(from, to);\r\n    let rate = Object.values(response.rates)[0];\r\n        if(rate) {\r\n            let result = (rate * amount_value).toFixed(3);\r\n            dispatch(actions.setCurrencyResult(+result));\r\n            setTimeout(() => {\r\n                dispatch(actions.setCalculateLoading(false));\r\n            }, 1000);\r\n        }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport SendMoneyTo from \"../../../../components/Pages/Dashboard/Crypto/SendMoneyTo/SendMonetyTo\";\r\nimport {setUsersThunk} from \"../../../../redux/Dashboard/cryptoReducer\";\r\nimport {RootStateType} from \"../../../../redux/rootReducer\";\r\nimport {UserType} from \"../../../../types/socials\";\r\n\r\ntype MapStatePropsType = {\r\n        loaded: boolean\r\n        users: Array<UserType>\r\n}\r\n\r\nconst mapStoreToProps = (store: RootStateType):MapStatePropsType => ({\r\n        loaded: store.crypto.loaded,\r\n        users: store.crypto.users,\r\n});\r\n\r\ntype MapDispatchType = {\r\n        setUsersThunk: (currendPage: number) => void\r\n}\r\n\r\n\r\nexport default connect<MapStatePropsType, MapDispatchType, {}, RootStateType>(mapStoreToProps, {setUsersThunk})(SendMoneyTo);","import React, {Fragment} from \"react\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    newsPicture: {\r\n        width: \"100%\",\r\n        height: theme.spacing(15),\r\n        [theme.breakpoints.down('md')]: {\r\n            width: \"100%\",\r\n            height: 120,\r\n        }\r\n    },\r\n}));\r\n\r\ntype PropsType = {\r\n    value: number\r\n    index: number\r\n    keys: number | string\r\n    picSrc: string\r\n    title: string\r\n    desc: string\r\n    url: string\r\n}\r\n\r\nconst TabsItems: React.FC<PropsType> = ({value, index, keys, picSrc, title, desc, url}) => {\r\n    const classes = useStyle();\r\n    return <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        aria-labelledby={`scrollable-auto-tab-${index}`}\r\n    >\r\n        {value === index && (\r\n\r\n            <Fragment><ListItem key={keys} alignItems=\"flex-start\">\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={12} md={3}>\r\n                        <ListItemAvatar>\r\n                            <Avatar className={classes.newsPicture} variant=\"rounded\" src={picSrc}/>\r\n                        </ListItemAvatar>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={9}>\r\n                        <ListItemText\r\n                            primary={title}\r\n                            secondary={\r\n                                <Fragment>\r\n                                    <Typography\r\n                                        component=\"span\"\r\n                                        variant=\"body2\"\r\n                                        color=\"secondary\"\r\n                                    >\r\n                                        {desc}\r\n                                    </Typography>\r\n\r\n                                </Fragment>\r\n                            }\r\n                        />\r\n                        <Chip\r\n                            avatar={<Avatar>C</Avatar>}\r\n                            label=\"Currency\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <Chip\r\n                            avatar={<Avatar>D</Avatar>}\r\n                            label=\"American dollar\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <Box mt={3} display=\"flex\" flexDirection=\"row-reverse\">\r\n                            <Link href={url} target={\"_blank\"}>\r\n                                Full article\r\n                            </Link>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </ListItem>\r\n                <Divider variant=\"inset\"/>\r\n            </Fragment>\r\n\r\n        )}\r\n    </div>\r\n};\r\n\r\n\r\nexport default TabsItems;","import React, {useEffect, useState} from 'react';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TabsItems from \"./TabsItems\";\r\nimport List from \"@material-ui/core/List\";\r\nimport {NewsType} from \"../../../../../types/socials\";\r\n\r\n\r\n//http://newsapi.org/v2/top-headlines?country=us&apiKey=e4d0f150f8f54c878a0935c9af7e9798\r\n// https://newsapi.org/v2/everything?q=euro&apiKey=e4d0f150f8f54c878a0935c9af7e9798\r\n\r\ntype PropsType = {\r\n    setNewsThunk: () => void,\r\n    news: Array<NewsType>\r\n}\r\n\r\nconst CurrencyNews: React.FC<PropsType> = ({setNewsThunk, news}) => {\r\n    const [tabIndexes, setTabIndex] = useState(0);\r\n    const handleTabsChange = (event: any, newValue: any) => {\r\n        setTabIndex(newValue);\r\n    };\r\n    useEffect(() => {\r\n        setNewsThunk();\r\n    }, []);\r\n\r\n    let index = 1;\r\n    let tabs_panel = news.map(el => <TabsItems keys={el.source.name} picSrc={el.urlToImage} title={el.title}\r\n                                               desc={el.description} value={tabIndexes}\r\n                                               index={(index < 3) ? index++ : index--} url={el.url}/>);\r\n    let all_tab_panel = news.map(el => <TabsItems keys={el.source.name} picSrc={el.urlToImage} title={el.title}\r\n                                                  desc={el.description} value={tabIndexes} index={0} url={el.url}/>);\r\n    return <Box mt={3}>\r\n        <Paper square>\r\n            <Box fontSize={\"h3.fontSize\"} p={3}>\r\n                Currency News\r\n            </Box>\r\n            <Tabs\r\n                value={tabIndexes}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                variant=\"scrollable\"\r\n                scrollButtons=\"auto\"\r\n                onChange={handleTabsChange}>\r\n                <Tab label=\"All\"/>\r\n                <Tab label=\"USD\"/>\r\n                <Tab label=\"EUR\"/>\r\n                <Tab label=\"RUS\"/>\r\n            </Tabs>\r\n            <List>\r\n                {all_tab_panel}\r\n                {tabs_panel}\r\n            </List>\r\n\r\n        </Paper>\r\n    </Box>\r\n};\r\n\r\n\r\nexport default CurrencyNews;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport CurrencyNews from \"../../../../components/Pages/Dashboard/Crypto/CurrencyNews/CurrencyNews\";\r\nimport {RootStateType} from \"../../../../redux/rootReducer\";\r\nimport {setNewsThunk} from \"../../../../redux/Dashboard/cryptoReducer\";\r\nimport {NewsType} from \"../../../../types/socials\";\r\n\r\ntype MapStateType = {\r\n    news: Array<NewsType>\r\n}\r\n\r\nconst mapStateToProps = (store: RootStateType) => ({\r\n    news: store.crypto.news\r\n});\r\n\r\ntype MapDispatchType = {\r\n    setNewsThunk: ()=>void\r\n}\r\n\r\n\r\nexport default connect<MapStateType, MapDispatchType, {}, RootStateType>(mapStateToProps, {setNewsThunk})(CurrencyNews);","import React from \"react\";\r\nimport {Box, Button, Paper} from \"@material-ui/core\";\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport grey from \"@material-ui/core/colors/grey\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    advertisment: {\r\n        backgroundColor: grey[900],\r\n        height: 350,\r\n        [theme.breakpoints.between('sm', 'md')]: {\r\n            height: 400,\r\n        },\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\"\r\n    },\r\n    button: {\r\n        background: 'linear-gradient(45deg, yellow, yellow)',\r\n        color: grey[900],\r\n    },\r\n}));\r\n\r\nconst Advertisment = () => {\r\n    const classes = useStyle();\r\n    return <Paper className={classes.advertisment}>\r\n        <Box display=\"flex\" justifyContent={\"center\"} pt={4}>\r\n            <PaymentIcon fontSize={\"large\"} style={{fontSize: 70}}/>\r\n        </Box>\r\n        {/*//            @ts-ignore*/}\r\n        <Typography variant={\"h3\"} align={\"center\"} m={0}>\r\n            Refer and Get Reward\r\n        </Typography>\r\n        {/*//            @ts-ignore*/}\r\n        <Typography fontSize={\"body1.fontSize\"} align={\"center\"} component={\"p\"}>\r\n            Reffer us to your friends and earn bonus when they join\r\n        </Typography>\r\n        <Box display={\"flex\"} justifyContent={\"center\"} p={3}>\r\n            <Button\r\n                classes={{\r\n                    root: classes.button\r\n                }}>\r\n                Invite Friends!\r\n            </Button>\r\n        </Box>\r\n\r\n    </Paper>\r\n};\r\n\r\n\r\nexport default Advertisment;","import React, {Fragment} from \"react\";\r\nimport {FormControl, InputLabel, MenuItem, Select, TextField} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SyncAltIcon from '@material-ui/icons/SyncAlt';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../../../utils/validators/validator\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\nconst useStyle = makeStyles((theme: any) => ({\r\n    input: {\r\n        minWidth: 120,\r\n        marginRight: theme.spacing(3),\r\n    },\r\n    textField: {\r\n        minWidth: 120,\r\n        marginRight: theme.spacing(3),\r\n        marginTop: theme.spacing(2)\r\n    }\r\n}));\r\n\r\ntype FieldProps = {\r\n    label: string,\r\n    classNameStyle: string,\r\n    input: any\r\n    meta: {\r\n        touched: any\r\n        error: any\r\n    }\r\n    custom?: any\r\n}\r\n\r\nconst renderTextField: React.FC<FieldProps> = ({label, classNameStyle, input, meta: {touched, error}, ...custom}) => {\r\n    let hasError = touched && error;\r\n    return <FormControl className={classNameStyle}>\r\n        <TextField {...input} {...custom} error={hasError}/>\r\n    </FormControl>\r\n}\r\n\r\nconst renderField: React.FC<FieldProps> = ({label, classNameStyle, input, meta: {touched, error}, ...custom}) => {\r\n    let hasError = touched && error;\r\n    return <FormControl className={classNameStyle} error={hasError}>\r\n        <InputLabel>{label}</InputLabel>\r\n        <Select {...input} {...custom} error={hasError}>\r\n\r\n        </Select>\r\n        <FormHelperText>{(hasError) ? error : \"\"}</FormHelperText>\r\n    </FormControl>\r\n}\r\n\r\ntype PropsType = {\r\n    result: number\r\n    loading: boolean\r\n    from: string | null,\r\n    to: string | null,\r\n    amount: number,\r\n}\r\n\r\nconst Calculator: React.FC<PropsType> = ({result, loading, from, to, amount}) => {\r\n    const classes = useStyle();\r\n    //@ts-ignore\r\n    return <Fragment>\r\n\r\n        <Field name={\"from\"} label=\"From\" component={renderField} className={classes.input} validate={[required]}>\r\n            <MenuItem value={\"USD\"}>USD</MenuItem>\r\n            <MenuItem value={\"EUR\"}>EUR</MenuItem>\r\n            <MenuItem value={\"RUB\"}>RUB</MenuItem>\r\n        </Field>\r\n\r\n\r\n        <Field name={\"to\"} label=\"To\" component={renderField} className={classes.input} validate={[required]}>\r\n            <MenuItem value={\"USD\"}>USD</MenuItem>\r\n            <MenuItem value={\"EUR\"}>EUR</MenuItem>\r\n            <MenuItem value={\"RUB\"}>RUB</MenuItem>\r\n        </Field>\r\n\r\n        <Field name=\"amount\" label=\"Amount\" component={renderTextField} classNameStyle={classes.textField}/>\r\n\r\n        <Box display={\"flex\"}>\r\n            <Box mt={3} mr={3}>\r\n                <Button\r\n                    type={\"submit\"}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<SyncAltIcon/>}>\r\n                    Calculate\r\n                </Button>\r\n            </Box>\r\n            <Box mt={(loading) ? 3 : 4}>\r\n                <Typography variant={\"h4\"} color={\"secondary\"}>\r\n                    {loading ? <CircularProgress\r\n                        size={30}/> : (result) ? `${amount}  ${from} = ${result} ${to}` : \"\"}\r\n                </Typography>\r\n            </Box>\r\n        </Box>\r\n    </Fragment>\r\n};\r\n\r\nexport default Calculator;","import React from \"react\";\r\nimport {RootStateType} from \"../../../../redux/rootReducer\";\r\nimport Calculator from \"../../../../components/Pages/Dashboard/Crypto/CurrencyCalculator/Calculator\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\ntype MapStateType = {\r\n    from: string | null,\r\n    to: string | null,\r\n    amount: number,\r\n    result: number,\r\n    loading: boolean\r\n}\r\n\r\nconst mapStoreToProps = (store: RootStateType):MapStateType => ({\r\n    from: store.crypto.calculate.from,\r\n    to: store.crypto.calculate.to,\r\n    amount: store.crypto.calculate.amount,\r\n    result: store.crypto.calculate.result,\r\n    loading: store.crypto.calculate.loading,\r\n});\r\n\r\nexport default connect(mapStoreToProps, {})(Calculator);\r\n\r\n","import React from \"react\";\r\nimport {Box, Grid, Paper} from \"@material-ui/core\";\r\nimport Advertisment from \"./Advertisment\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport Calculator from \"../../../../../containers/Pages/Dashboard/Crypto/Calculator\";\r\n\r\nconst useStyle = makeStyles((theme: any) => ({\r\n    paper: {\r\n        height: 350,\r\n        [theme.breakpoints.between('sm', 'md')]: {\r\n            height: 400,\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    }\r\n}));\r\n\r\n\r\ntype FormProps = {\r\n    from: string\r\n    to: string\r\n    amount: number\r\n}\r\n\r\nlet CurrencyCalculator: React.FC<InjectedFormProps<FormProps>> = ({handleSubmit}) => {\r\n    const classes = useStyle();\r\n    return <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={12} md={6}>\r\n            <Box mt={3}>\r\n                <Advertisment/>\r\n            </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6}>\r\n            <Paper className={classes.paper}>\r\n                <Box p={4}>\r\n                    <Box fontSize=\"h4.fontSize\">\r\n                        Currency Calculator\r\n                    </Box>\r\n                    <Box fontSize={\"body1.fontSize\"} mt={2}>\r\n                        1.87 BT equals\r\n                    </Box>\r\n                    <Box fontSize={\"h2.fontSize\"} mt={1} fontWeight={\"bold\"}>\r\n                        11345.89 USD\r\n                    </Box>\r\n                    <Box fontSize={\"caption.fontSize\"} color={\"secondary\"} mt={1}>\r\n                        @ 1 BTC = 6718.72 USD\r\n                    </Box>\r\n                    <Box mt={2}>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <Calculator/>\r\n                        </form>\r\n                    </Box>\r\n                </Box>\r\n            </Paper>\r\n        </Grid>\r\n\r\n    </Grid>\r\n};\r\n\r\nlet CalculatorForm = reduxForm<FormProps>({\r\n    form: 'calculator',\r\n})(CurrencyCalculator);\r\n\r\nexport default CalculatorForm;","import React from \"react\";\r\nimport  {cardBreadcrumbs} from \"../../../../utils/helpers/cardBreadcrumbs\";\r\nimport CryptoPrice from \"./CryptoPrice\";\r\nimport PortfolioBalance from \"./PortfolioBalance\";\r\nimport SendMoneyTo from \"../../../../containers/Pages/Dashboard/Crypto/SendMoneyTo\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CurrencyNews from \"../../../../containers/Pages/Dashboard/Crypto/CurrencyNews\";\r\nimport CalculatorForm from \"./CurrencyCalculator/CurrencyCalculator\";\r\nimport {withAuthRedirect} from \"../../../../hoc/AuthRedirect\";\r\n\r\ntype PropsType = {\r\n    currencyExchange: (from: string, to: string, amount: number) => void\r\n}\r\n\r\ntype FormDataType = {\r\n    from: string\r\n    to: string\r\n    amount: number\r\n}\r\n\r\nconst Crypto: React.FC<PropsType> = ({currencyExchange}) => {\r\n    const handleSubmit = ({from, to, amount}: FormDataType) => {\r\n        currencyExchange(from, to, amount);\r\n    }\r\n\r\n    return (\r\n        <Box m={3}>\r\n            {cardBreadcrumbs(\"Crypto\", \"App\", \"Dashboard\", \"Crypto\")}\r\n            <CryptoPrice/>\r\n            <PortfolioBalance/>\r\n            <SendMoneyTo/>\r\n            <CalculatorForm onSubmit={handleSubmit}/>\r\n            <CurrencyNews/>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default withAuthRedirect(Crypto);\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../../../redux/rootReducer\";\r\nimport Crypto from \"../../../../components/Pages/Dashboard/Crypto/Crypto\";\r\nimport {currencyExchange} from \"../../../../redux/Dashboard/cryptoReducer\";\r\n\r\n\r\ntype MapStateType = {\r\n    result: number\r\n}\r\n\r\nconst mapStateToProps = (store: RootStateType) => ({\r\n    result: store.crypto.calculate.result\r\n});\r\n\r\ntype DispatchType = {\r\n    currencyExchange: (from: string , to:string, amount: number)=> void\r\n}\r\n\r\n//<TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultRootState>\r\nexport default connect<MapStateType, DispatchType, {}, RootStateType>(mapStateToProps, {currencyExchange})(Crypto);\r\n\r\n\r\n\r\n\r\n","import React, {Fragment} from \"react\";\r\nimport {Grid, Paper, Typography} from \"@material-ui/core\";\r\n\r\nconst Folders = () => {\r\n    return (\r\n        <Fragment>\r\n            <Grid container justify={\"center\"} alignContent={\"center\"}>\r\n                <Paper style={{margin: 20, minHeight: 100, padding: 20}}>\r\n                    <Typography variant={\"h2\"}>We are on a stage of developing this tools :) </Typography>\r\n                </Paper>\r\n            </Grid>\r\n        </Fragment>\r\n\r\n    );\r\n};\r\n\r\nexport default Folders;","import React from 'react';\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {SamuraiType} from \"../../../types/socials\";\r\nimport {Skeleton} from \"@material-ui/lab\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: 240,\r\n        flexShrink: 0,\r\n        borderLeft: theme.palette.divider,\r\n    },\r\n    drawerPaper: {\r\n        width: 240,\r\n        marginLeft: 270,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            marginLeft: 0,\r\n        },\r\n        zIndex: 10,\r\n        borderLeft: \"1px solid \" + theme.palette.divider,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n\r\ntype PropsType = {\r\n    user: SamuraiType | null,\r\n}\r\nconst SettingSideBar: React.FC<PropsType> = ({user}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Drawer\r\n            className={classes.drawer}\r\n            variant=\"permanent\"\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n        >\r\n            <Toolbar/>\r\n            <div className={classes.drawerContainer}>\r\n                <List>\r\n                    <ListItem alignItems=\"flex-start\">\r\n                        <ListItemAvatar>\r\n                            {!user ? <Skeleton animation=\"wave\" variant=\"circle\" width={40} height={40}/> :\r\n                                <Avatar alt=\"Remy Sharp\" src={user.photos.small}/>\r\n                            }\r\n                        </ListItemAvatar>\r\n                        <ListItemText>\r\n                            {!user ? <Skeleton animation=\"wave\" height={10} width=\"80%\" style={{marginBottom: 6}}/> :\r\n                            <Typography variant={\"body2\"}> {user.fullName}</Typography> }\r\n                            <Typography variant={\"caption\"} color={\"secondary\"}> Personal settings</Typography>\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n                <Typography variant={\"overline\"} color={\"secondary\"}>\r\n                    Profile\r\n                </Typography>\r\n                <List>\r\n                    {['Personal Info'].map((text) => (\r\n                        <ListItem button key={text} component={NavLink} to={\"/settings/profile\"}>\r\n                            <ListItemText primary={text}/>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n                <Divider/>\r\n                <Typography variant={\"overline\"} color={\"secondary\"}>\r\n                    Appearance\r\n                </Typography>\r\n                <List>\r\n                    {['Theme'].map((text) => (\r\n                        <ListItem button key={text} component={NavLink} to={\"/settings/theme\"}>\r\n                            <ListItemText primary={text}/>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default SettingSideBar;","import React from \"react\";\r\nimport SettingSideBar from \"./SettingSideBar\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../../redux/rootReducer\";\r\n\r\n\r\nconst mapStateToProps = (store: RootStateType) =>({\r\n    user: store.profile.currentUser,\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(SettingSideBar);\r\n","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {renderField} from \"../../../../utils/helpers/FormInput\";\r\nimport {required} from \"../../../../utils/validators/validator\";\r\nimport {Divider, Typography} from \"@material-ui/core\";\r\nimport {SamuraiType} from \"../../../../types/socials\";\r\nimport FormFields from \"../../Socials/Profile/Contacts/FormFields\";\r\nimport {submitButton} from \"../../../../utils/helpers/SubmitButton\";\r\nimport BioFormField from \"../../Socials/Profile/Biography/BioFormField\";\r\nimport AboutFormField from \"../../Socials/Profile/AboutCard/AboutFormField\";\r\n\r\n\r\ntype PropsType = {\r\n    profile: SamuraiType\r\n}\r\nconst ProfileForm: React.FC<InjectedFormProps<Omit<SamuraiType, 'photos'>, PropsType> & PropsType> = ({profile, handleSubmit}) => {\r\n    return (\r\n        <form style={{width: \"100%\", display: \"flex\", flexDirection: \"column\"}} onSubmit={handleSubmit}>\r\n            <Field name={\"fullName\"} component={renderField}\r\n                   validate={[\r\n                       required\r\n                   ]}\r\n                   variant={\"outlined\"}\r\n                   label={\"Full Name\"}/>\r\n\r\n            <AboutFormField lookingJob={profile.lookingForAJob}/>\r\n\r\n            <BioFormField/>\r\n            <Typography variant={'h3'}>Contacts Information</Typography>\r\n            <Divider/>\r\n            <FormFields userInfo={profile}/>\r\n            {submitButton(false, \"Save\", \"contained\", \"primary\")}\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\nlet ProfileSettingsForm = reduxForm<Omit<SamuraiType, 'photos'>, PropsType>({\r\n    form: 'profileSettings',\r\n    enableReinitialize: true\r\n})(ProfileForm);\r\n\r\nexport default ProfileSettingsForm;","import React, {useState} from 'react';\r\nimport {Avatar, Badge, Button} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport {SamuraiType} from \"../../../../types/socials\";\r\nimport {ErrorType} from \"../../../../types/errors\";\r\nimport Loaded from \"../../../Loaded\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    avatar: {\r\n        width: theme.spacing(30),\r\n        height: theme.spacing(30),\r\n        cursor: \"pointer\"\r\n    }\r\n}));\r\n\r\ntype PropsType = {\r\n    user: SamuraiType | null\r\n    isFetching?: boolean,\r\n    error?: ErrorType | null,\r\n    updatePhoto: (image: any) => Promise<void>\r\n}\r\n\r\nconst AvatarSetting: React.FC<PropsType> = ({user, updatePhoto}) => {\r\n    const classes = useStyles();\r\n    const [isDialogOpen, setDialogOpen] = useState(false);\r\n    const handleClose = () => {\r\n        setDialogOpen(false)\r\n    };\r\n    const handleOpen = () => {\r\n        setDialogOpen(true)\r\n    };\r\n    const uploadPhotoChange = (form: any) => {\r\n        updatePhoto(form.target.files[0])\r\n            .then(() => {\r\n                setDialogOpen(false)\r\n            })\r\n    };\r\n    if (!user)\r\n        return <Loaded/>;\r\n    return (\r\n        <Badge color={\"default\"}\r\n               anchorOrigin={{\r\n                   vertical: 'bottom',\r\n                   horizontal: 'right',\r\n               }}\r\n               badgeContent={<Button onClick={handleOpen} size={\"small\"}\r\n                                     variant=\"contained\"\r\n                                     color=\"secondary\"\r\n                                     startIcon={<EditIcon/>}>\r\n                   Edit\r\n               </Button>} showZero>\r\n            <Avatar className={classes.avatar} src={user.photos.large}/>\r\n\r\n            <Dialog open={isDialogOpen} onClose={handleClose}\r\n                    fullWidth={true}\r\n                    maxWidth={\"md\"}\r\n                    aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Update your profile photo</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Click button to upload\r\n                    </DialogContentText>\r\n                    <Avatar className={classes.avatar} src={user.photos.large} variant=\"rounded\"/>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <input\r\n                        onChange={uploadPhotoChange}\r\n                        accept=\"image/*\"\r\n                        id=\"contained-button-file\"\r\n                        multiple\r\n                        className={classes.input}\r\n                        type=\"file\"\r\n                    />\r\n                    <label htmlFor=\"contained-button-file\">\r\n                        <Button variant=\"outlined\" color=\"primary\" component=\"span\">\r\n                            Upload\r\n                        </Button>\r\n                    </label>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Badge>\r\n    );\r\n};\r\n\r\nexport default AvatarSetting;","import {RootStateType} from \"../../../../redux/rootReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport AvatarSetting from \"./AvatarSetting\";\r\nimport {updatePhoto} from \"../../../../redux/Socials/profileReducer\";\r\n\r\nconst mapStoreToProps = (store: RootStateType) => ({\r\n    user: store.profile.user,\r\n    isFetching: store.profile.isFetching,\r\n    error: store.profile.error\r\n});\r\n\r\nexport default connect(mapStoreToProps, {updatePhoto})(AvatarSetting);","import React, {Fragment} from 'react';\r\nimport {Divider, Grid, Typography} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport ProfileForm from \"./ProfileForm\";\r\nimport AvatarSetting from \"../ProfilePhoto/AvatarSettingContainer\";\r\nimport {SamuraiType} from \"../../../../types/socials\";\r\nimport Loaded from \"../../../Loaded\";\r\nimport SnackBarContainer from \"../../components/SnackbarContainer\";\r\nimport {ErrorType} from \"../../../../types/errors\";\r\n\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n    gridMargin: {\r\n        marginTop: theme.spacing(5),\r\n        marginBottom: theme.spacing(5),\r\n    }\r\n\r\n}));\r\n\r\ntype PropsType = {\r\n    profile: SamuraiType | null\r\n    updateProfile: (formData: Omit<SamuraiType, 'photos'>, formName: string) => void\r\n    error: ErrorType | null\r\n    isFetching: boolean\r\n}\r\n\r\nconst ProfileSettings: React.FC<PropsType> = ({profile, updateProfile, error, isFetching}) => {\r\n    const classes = useStyle();\r\n    const onSubmit = (formData: any) => {\r\n        updateProfile(formData, 'profileSettings')\r\n    };\r\n    if (!profile)\r\n        return <Loaded/>;\r\n    return (\r\n        <Fragment>\r\n            <Typography variant={\"h3\"}>Public Profile</Typography>\r\n            <Divider/>\r\n            <Grid container direction=\"row-reverse\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"flex-start\" className={classes.root}>\r\n                <Grid container item xs={12} sm={12} md={5} justify=\"center\"\r\n                      alignItems=\"center\" className={classes.gridMargin}>\r\n                    <AvatarSetting/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={7}>\r\n                    <ProfileForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                </Grid>\r\n            </Grid>\r\n            {error && !isFetching &&\r\n            <SnackBarContainer error={error} successAlert={\"Information was updated successfully!\"}/>}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\n\r\nexport default ProfileSettings;","import {connect} from \"react-redux\";\r\nimport ProfileSettings from \"./ProfileSettings\";\r\nimport {RootStateType} from \"../../../../redux/rootReducer\";\r\nimport {SamuraiType} from \"../../../../types/socials\";\r\nimport {updateProfile} from \"../../../../redux/Socials/profileReducer\";\r\nimport {ErrorType} from \"../../../../types/errors\";\r\n\r\n\r\ntype MapStateType = {\r\n    profile: SamuraiType | null,\r\n    error: ErrorType | null\r\n    isFetching: boolean\r\n}\r\ntype MapDispatchType = {\r\n    updateProfile: (formData: Omit<SamuraiType, 'photos'>, formName: string) => void\r\n}\r\n\r\nconst mapStoreToProps = (store: RootStateType) => ({\r\n    profile: store.profile.user,\r\n    error: store.profile.error,\r\n    isFetching: store.profile.isFetching\r\n})\r\n\r\n\r\nexport default connect<MapStateType, MapDispatchType, {}, RootStateType>(mapStoreToProps, {updateProfile})(ProfileSettings);","import React, {Fragment} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport {Box, Checkbox, FormControlLabel, Typography} from \"@material-ui/core\";\r\nimport {blueGrey, cyan, lightGreen} from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n        width: 350,\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    icon: {\r\n        color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n    typography: {\r\n        marginBottom: theme.spacing(3),\r\n        fontWeight: \"bold\",\r\n    }\r\n}));\r\n\r\ntype PropsType = {\r\n    themeName: string,\r\n    backgroundName: string,\r\n    settingAppThemeColor: (themeName: string) => any\r\n    settingAppThemeBackground: (backgroundName: string) => any\r\n}\r\n\r\nconst ThemeSettings: React.FC<PropsType> = ({themeName, backgroundName, settingAppThemeColor, settingAppThemeBackground}) => {\r\n    const classes = useStyles();\r\n    const handleThemeColorChoose = (event: any) => {\r\n        settingAppThemeColor(event.target.value);\r\n    };\r\n    const handleThemeBackgroundChoose = (event: any) => {\r\n        settingAppThemeBackground(event.target.value);\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <Box component={\"div\"} mt={3}>\r\n            <Typography variant={\"overline\"} className={classes.typography}> Choose your primary color </Typography>\r\n            <GridList className={classes.gridList}>\r\n                <GridListTile key={\"theme-image-default\"} >\r\n                    <div style={{width: \"100%\", height: \"100%\", backgroundColor: `${cyan.A200}`}}>{cyan.A200}</div>\r\n                    <GridListTileBar\r\n                        actionIcon={\r\n                            //@ts-ignore\r\n                            <FormControlLabel onClick={handleThemeColorChoose} checked={themeName === 'default'}\r\n                                              control={<Checkbox icon={<RadioButtonUncheckedIcon/>}\r\n                                                                 checkedIcon={<CheckCircleIcon color={\"primary\"}/>}\r\n                                                                 name=\"default\" value={'default'}/>}\r\n                                              label={\"default theme\"}\r\n                            />\r\n                        }\r\n                    />\r\n                </GridListTile>\r\n                <GridListTile key={\"theme-image-default\"} >\r\n                    <div style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        backgroundColor: `${lightGreen.A400}`\r\n                    }}>{lightGreen.A400}</div>\r\n                    <GridListTileBar\r\n                        actionIcon={\r\n                            //@ts-ignore\r\n                            <FormControlLabel onClick={handleThemeColorChoose} checked={themeName === 'green'}\r\n                                              control={<Checkbox icon={<RadioButtonUncheckedIcon/>}\r\n                                                                 checkedIcon={<CheckCircleIcon color={\"primary\"}/>}\r\n                                                                 name=\"green\" value={'green'}/>}\r\n                                              label={\"Green theme\"}\r\n                            />\r\n                        }\r\n                    />\r\n                </GridListTile>\r\n            </GridList>\r\n            </Box>\r\n            <Box component={\"div\"} mt={3}>\r\n            <Typography variant={\"overline\"} className={classes.typography}>Choose background theme: </Typography>\r\n            <GridList className={classes.gridList}>\r\n                <GridListTile key={\"theme-image-default\"} >\r\n                    <div style={{width: \"100%\", height: \"100%\", border: \"1px solid #888\"}}>\r\n                        <div style={{width: \"100%\", height: \"50%\", backgroundColor: `#323232`}}>#323232</div>\r\n                        <div style={{width: \"100%\", height: \"50%\", backgroundColor: `#212121`}}>#212121</div>\r\n                    </div>\r\n                    <GridListTileBar\r\n                        actionIcon={\r\n                            //@ts-ignore\r\n                            <FormControlLabel onClick={handleThemeBackgroundChoose}\r\n                                              checked={backgroundName === 'default'}\r\n                                              control={<Checkbox icon={<RadioButtonUncheckedIcon/>}\r\n                                                                 checkedIcon={<CheckCircleIcon color={\"primary\"}/>}\r\n                                                                 name=\"default\" value={'default'}/>}\r\n                                              label={\"Default theme\"}\r\n                            />\r\n                        }\r\n                    />\r\n                </GridListTile>\r\n                <GridListTile key={\"theme-image-default\"} >\r\n                    <div style={{width: \"100%\", height: \"100%\", border: \"1px solid #888\"}}>\r\n                        <div style={{\r\n                            width: \"100%\",\r\n                            height: \"50%\",\r\n                            backgroundColor: `${blueGrey[700]}`\r\n                        }}>{blueGrey[700]}</div>\r\n                        <div style={{\r\n                            width: \"100%\",\r\n                            height: \"50%\",\r\n                            backgroundColor: `${blueGrey[900]}`\r\n                        }}>{blueGrey[900]}</div>\r\n                    </div>\r\n                    <GridListTileBar\r\n                        actionIcon={\r\n                            //@ts-ignore\r\n                            <FormControlLabel onClick={handleThemeBackgroundChoose}\r\n                                              checked={backgroundName === 'blueGrey'}\r\n                                              control={<Checkbox icon={<RadioButtonUncheckedIcon/>}\r\n                                                                 checkedIcon={<CheckCircleIcon color={\"primary\"}/>}\r\n                                                                 name=\"blueGrey\" value={'blueGrey'}/>}\r\n                                              label={\"Blue Grey\"}\r\n                            />\r\n                        }\r\n                    />\r\n                </GridListTile>\r\n            </GridList>\r\n            </Box>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ThemeSettings;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport ThemeSettings from \"./ThemeSettings\";\r\nimport {settingAppThemeBackground, settingAppThemeColor} from \"../../../../redux/appReducer\";\r\nimport {RootStateType} from \"../../../../redux/rootReducer\";\r\n\r\n\r\n\r\nconst mapStateToProps = (store: RootStateType) => ({\r\n    themeName: store.app.themeName,\r\n    backgroundName: store.app.backgroundName\r\n});\r\n\r\nexport default connect(mapStateToProps, {settingAppThemeColor, settingAppThemeBackground})(ThemeSettings);","import React, {Fragment} from 'react';\r\nimport SettingSideBar from \"./SettingSideBarContainer\";\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\nimport ProfileSettings from \"./ProfileSettings/ProfileSettingsContainer\";\r\nimport ThemeSettings from \"./ThemeSetting/ThemeSettingContainer\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {withAuthRedirect} from \"../../../hoc/AuthRedirect\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    content: {\r\n        marginLeft: 240,\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}))\r\n\r\nconst Settings = () => {\r\n    const classes = useStyle();\r\n    const Settings = () => <Switch>\r\n        <Route exact path={\"/settings/profile\"} component={ProfileSettings}/>\r\n        <Route exact path={\"/settings/theme\"} component={ThemeSettings}/>\r\n    </Switch>\r\n\r\n    return (\r\n        <Fragment>\r\n            <SettingSideBar/>\r\n            <main className={classes.content}>\r\n                <HashRouter>\r\n                    <Switch>\r\n                        <Settings/>\r\n                    </Switch>\r\n                </HashRouter>\r\n            </main>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default withAuthRedirect(Settings);","import React, {Suspense} from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Auth from \"../containers/Auth\";\r\nimport Loaded from \"./Loaded\";\r\nimport Crypto from \"../containers/Pages/Dashboard/Crypto/Crypto\";\r\nimport Folders from \"./Pages/Dashboard/Folders/Folders\";\r\nimport Settings from \"./Pages/Settings/Settings\";\r\n\r\nconst People = React.lazy(() => import(\"./Pages/Socials/People/People\"));\r\nconst Following = React.lazy (() => import(\"./Pages/Socials/Following/FollowingContainer\"));\r\nconst Profile = React.lazy(()=>import(\"./Pages/Socials/Profile/Profile/ProfileContainer\"));\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    content: {\r\n        float: \"right\",\r\n        width: \"100%\",\r\n        [theme.breakpoints.up('md')]: {\r\n            width: \"calc(100% - 270px)\",\r\n        },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\nconst Content = () => {\r\n    const classes = useStyle();\r\n\r\n    const Content = () => (\r\n        <Suspense fallback={<Loaded/>}>\r\n            <Switch>\r\n                <Route exact path={\"/dashboard/currency\"} component={Crypto}/>\r\n                <Route exact path={\"/dashboard/folders\"} component={Folders}/>\r\n                <Route path={\"/profile/:id\"} component={Profile}/>\r\n                <Route exact path={\"/socials/people\"} component={People}/>\r\n                <Route exact path={\"/socials/following\"} component={Following}/>\r\n                <Route exact path={\"/auth\"} component={Auth}/>\r\n                <Route path={\"/settings\"} component={Settings}/>\r\n                <Route exact path={\"/\"} render={() => <Redirect to={\"/auth\"}/>}/>\r\n            </Switch>\r\n        </Suspense>\r\n    );\r\n\r\n    return <main className={classes.content}>\r\n        <div className={classes.toolbar}/>\r\n        <Switch>\r\n            <Content/>\r\n        </Switch>\r\n    </main>\r\n};\r\n\r\nexport default Content;","import React, {Fragment} from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBarNavigation from \"./containers/AppBarNavigation\";\r\nimport {ThemeProvider} from \"@material-ui/core/styles\";\r\nimport SideBarDrawer from \"./containers/SideBarDrawer\";\r\nimport Content from \"./components/Content\";\r\n\r\ntype PropsType = {\r\n    theme: any;\r\n}\r\n\r\nconst App:React.FC<PropsType> = ({theme}) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Fragment>\r\n        <CssBaseline />\r\n        <AppBarNavigation />\r\n        <SideBarDrawer />\r\n              <Content/>\r\n      </Fragment>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\n\r\nexport default App;\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport App from \"./App\";\r\nimport {RootStateType} from \"./redux/rootReducer\";\r\n\r\n\r\nconst mapStateToProps = (store: RootStateType) =>({\r\n    theme: store.app.theme\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(App);","import {InferActionTypes} from \"./rootReducer\";\r\n\r\nconst initialState = {\r\n  sidebar_open: false\r\n};\r\ntype InitialStateType = typeof initialState;\r\n\r\ntype ActionType = InferActionTypes<typeof actions>\r\n\r\nconst reducer = (state = initialState, action: ActionType): InitialStateType => {\r\n  const newState = { ...state };\r\n  switch (action.type) {\r\n    case \"SIDEBAR_TOGGLE\":\r\n      newState.sidebar_open = !state.sidebar_open;\r\n      break;\r\n    case \"SIDEBAR_CLOSE\":\r\n      newState.sidebar_open = false;\r\n      break;\r\n  }\r\n  return newState;\r\n}\r\n\r\nexport default reducer;\r\n\r\nconst actions = {\r\n  setSideBarToggle: ()=> ({type: \"SIDEBAR_TOGGLE\"} as const),\r\n  setSideBarClose: () => ({type: \"SIDEBAR_CLOSE\"} as const)\r\n};","import {combineReducers} from \"redux\";\r\nimport appBarReducer from \"./appBarReducer\";\r\nimport cryptoReducer from \"./Dashboard/cryptoReducer\";\r\nimport appReducer from \"./appReducer\";\r\nimport profileReducer from \"./Socials/profileReducer\";\r\nimport peopleReducer from \"./Socials/peopleReducer\";\r\nimport followingReducer from \"./Socials/followingReducer\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    appBar: appBarReducer,\r\n    crypto: cryptoReducer,\r\n    app: appReducer,\r\n    profile: profileReducer,\r\n    people: peopleReducer,\r\n    following: followingReducer,\r\n    form: formReducer,\r\n});\r\n\r\n//type ActionTypes<T> = T extends {[key: string]: infer U} ? U : never;\r\n//export type InferActionTypes<T extends {[key: string]: (...arg: any[]) => any}> = ReturnType<ActionTypes<T>>\r\n\r\nexport type InferActionTypes<T> = T extends { [key: string]: (...args: any[]) => infer R } ? R : never;\r\n\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {applyMiddleware, compose, createStore} from \"redux\";\r\nimport App from \"./AppContainer\";\r\nimport {rootReducer} from \"./redux/rootReducer\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>,\r\n    rootElement\r\n);\r\n","import React from \"react\";\r\nimport {FormControl, FormControlLabel, Input, InputAdornment, Switch, TextField} from \"@material-ui/core\";\r\nimport {iconHelper} from \"./SocialNetworkIcon\";\r\n\r\ntype TextFieldType = {\r\n    label: string\r\n    input: any\r\n    meta: {\r\n        touched: boolean\r\n        error: boolean\r\n    }\r\n    custom?: any,\r\n    icon?: string | null,\r\n    defaultValue?: string\r\n}\r\n\r\nexport const renderField: React.FC<TextFieldType> = ({label, input, meta: {touched, error}, ...custom}) => {\r\n    let hasError = touched && error;\r\n    return <TextField error={hasError} label={label} {...input} {...custom}/>\r\n};\r\n\r\nexport const renderSwitchField: React.FC<TextFieldType> = ({label, input, meta: {touched, error}, ...custom}) => {\r\n    return <FormControlLabel {...input}\r\n                             control={<Switch {...custom} name=\"lookingForAJob\" color=\"primary\"/>}\r\n                             label={label}\r\n\r\n    />\r\n};\r\n\r\n\r\nexport const renderTextFieldWithIcon: React.FC<TextFieldType> = ({label, icon, defaultValue, input, meta: {touched, error}, ...custom}) => {\r\n    let hasError = touched && error;\r\n    return <FormControl fullWidth error={hasError} margin={\"normal\"}>\r\n        <Input\r\n            {...custom} {...input}\r\n            startAdornment={<InputAdornment position=\"start\">{iconHelper(icon || \"\")}</InputAdornment>}\r\n            placeholder={label}\r\n        />\r\n    </FormControl>\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\n\r\nconst Loaded = () => {\r\n    const classes = useStyles();\r\n    return <Backdrop open={true} className={classes.backdrop}>\r\n        <CircularProgress color=\"inherit\"/>\r\n    </Backdrop>\r\n};\r\n\r\n\r\nexport default Loaded;","import {PeopleType, PhotoType, SamuraiType} from \"../../types/socials\";\r\nimport {ResultCodeEnum, serverAPI} from \"../../api/api\";\r\nimport {InferActionTypes, RootStateType} from \"../rootReducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {ErrorType} from \"../../types/errors\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {Omit} from \"@material-ui/core\";\r\n\r\nconst initialState = {\r\n    loading: false as boolean,\r\n    user: null as SamuraiType | null,\r\n    currentUser: null as SamuraiType | null,\r\n    isFetching: false,\r\n    isSuccess: false,\r\n    error: null as ErrorType | null,\r\n    dataForm: null as Omit<SamuraiType, 'photos'> | null,\r\n    followingCount: 0,\r\n    followingPeople: null as Array<PeopleType>| null,\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\nconst reducer = (state = initialState, action: ActionType): InitialStateType => {\r\n    const newState = {...state};\r\n    switch (action.type) {\r\n        case \"SET_FETCHING\":\r\n            newState.isFetching = action.isFetching;\r\n            break;\r\n        case \"SET_USER\":\r\n            if (action.user) {\r\n                newState.user = Object.assign({}, action.user);\r\n            }\r\n            break;\r\n        case \"SET_ERROR_MESSAGE\":\r\n            if (action.error)\r\n                newState.error = {...action.error};\r\n            else\r\n                newState.error = null;\r\n            break;\r\n        case \"SET_FORM_DATA\":\r\n            if (state.user) {\r\n                console.log(state.user);\r\n                let formdata = {...state.user};\r\n                formdata.contacts = {...state.user.contacts};\r\n                delete formdata.photos;\r\n                newState.dataForm = {...formdata};\r\n                newState.dataForm.contacts = {...formdata.contacts};\r\n                Object.assign(newState.dataForm, action.dataForm);\r\n            } else\r\n                newState.dataForm = null;\r\n            break;\r\n        case \"SET_PROFILE_PHOTO\":\r\n            if (state.user) {\r\n                newState.user = {...state.user};\r\n                newState.user.photos = {...action.image};\r\n            }\r\n            break;\r\n        case \"SET_CURRENT_USER\":\r\n            newState.currentUser = {...action.user};\r\n            newState.currentUser.contacts = {...action.user.contacts};\r\n            newState.currentUser.photos = {...action.user.photos};\r\n            break;\r\n        case \"SET_FOLLOW_COUNT\":\r\n            newState.followingCount = action.count;\r\n            newState.followingPeople = [...action.items];\r\n            break;\r\n    }\r\n    return newState;\r\n};\r\nexport default reducer;\r\n\r\nexport const actions = {\r\n    setFetching: (isFetching: boolean) => ({type: \"SET_FETCHING\", isFetching} as const),\r\n    setUser: (user: SamuraiType | null) => ({type: \"SET_USER\", user} as const),\r\n    setErrorData: (error: ErrorType | null) => ({type: \"SET_ERROR_MESSAGE\", error: error} as const),\r\n    setFormData: (dataForm: Omit<SamuraiType, 'photos'>) => ({type: \"SET_FORM_DATA\", dataForm} as const),\r\n    setPhotos: (image: PhotoType) => ({type: \"SET_PROFILE_PHOTO\", image} as const),\r\n    setCurrentUser: (user: SamuraiType) => ({type: \"SET_CURRENT_USER\", user} as const),\r\n    followCount: (count: number, items: Array<PeopleType>) => ({type: \"SET_FOLLOW_COUNT\", count, items} as const),\r\n};\r\n\r\ntype ActionType = InferActionTypes<typeof actions>\r\n// export type ThunkAction<R, S, E, A extends Action> = (\r\n//     dispatch: ThunkDispatch<S, E, A>,\r\n//     getState: () => S,\r\n//     extraArgument: E\r\n// ) => R;\r\ntype ThunkType =  ThunkAction<void, RootStateType, any, ActionType>;\r\nexport const getUserByIdThunk = (userId: number):ThunkType => (dispatch, getState) => {\r\n    dispatch(actions.setFetching(true));\r\n    dispatch(actions.setUser(null));\r\n    Promise.all([\r\n        serverAPI.getUserById(userId),\r\n        serverAPI.followingCount(3, 1),\r\n    ])\r\n        .then(([user, countInfo]) => {\r\n            dispatch(actions.setUser(user));\r\n            if (user.userId === getState().app.user) {\r\n                dispatch(actions.setCurrentUser(user));\r\n            }\r\n            dispatch(actions.followCount(countInfo.totalCount, countInfo.items));\r\n            dispatch(actions.setFetching(false));\r\n        })\r\n};\r\nexport const updatePhoto = (image: any): ThunkAction<Promise<void>, RootStateType, any, ActionType> => (dispatch) => {\r\n    let formData = new FormData();\r\n    formData.append(\"image\", image);\r\n    dispatch(actions.setFetching(true));\r\n    return serverAPI.updatePhoto(formData)\r\n        .then((res) => {\r\n            if (res.resultCode === ResultCodeEnum.Success) {\r\n                dispatch(actions.setPhotos(res.data.photos));\r\n                dispatch(actions.setErrorData(res));\r\n                dispatch(actions.setFetching(false));\r\n            } else\r\n                dispatch(actions.setErrorData(res));\r\n            setTimeout(() => dispatch(actions.setErrorData(null)), 6000);\r\n        });\r\n};\r\nexport const updateProfile = (data: any, formName: string): ThunkType => async (dispatch, getState: any) => {\r\n    dispatch(actions.setFetching(true));\r\n    dispatch(actions.setFormData(data));\r\n    let response = await serverAPI.updateProfile(getState().profile.dataForm);\r\n    if (response.resultCode === 0) {\r\n        dispatch(getUserByIdThunk(getState().app.user));\r\n        dispatch(actions.setErrorData(response));\r\n        dispatch(actions.setFetching(false));\r\n        setTimeout(() => dispatch(actions.setErrorData(null)), 6000);\r\n    } else {\r\n        let objKeys = {...getState().profile.dataForm};\r\n        delete objKeys.contacts;\r\n        let arrayKey = Object.keys(objKeys);\r\n        let key = arrayKey.filter((el) => {\r\n            for (let i = 0; i < response.messages.length; i++) {\r\n                if (response.messages[i].toLowerCase().includes(el))\r\n                    return el;\r\n            }\r\n        });\r\n        let contactsKeys = [\"facebook\", \"twitter\", \"vk\", \"github\", \"mainLink\", \"instagram\", \"website\", \"youtube\"];\r\n        let key2 = contactsKeys.filter((el) => {\r\n            for (let i = 0; i < response.messages.length; i++) {\r\n                if (response.messages[i].toLowerCase().includes(el))\r\n                    return el;\r\n            }\r\n        });\r\n        let errorStack = {};\r\n        for (let i = 0; i < key.length; i++) {\r\n            errorStack = Object.assign(errorStack, {[key[i]]: response.messages[i]});\r\n        }\r\n        let contactsError = {contacts: {}};\r\n        for (let i = 0; i < key2.length; i++) {\r\n            contactsError.contacts = {...contactsError.contacts, [key2[i]]: response.messages[i]};\r\n        }\r\n        errorStack = Object.assign(errorStack, contactsError);\r\n        console.log(key2);\r\n        console.log(errorStack);\r\n        //@ts-ignore\r\n        dispatch(stopSubmit(formName, errorStack));\r\n        dispatch(actions.setErrorData(response));\r\n        dispatch(actions.setFetching(false));\r\n        setTimeout(() => dispatch(actions.setErrorData(null)), 6000);\r\n        return Promise.reject(response);\r\n    }\r\n};\r\n"],"sourceRoot":""}