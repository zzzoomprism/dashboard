{"version":3,"sources":["utils/helpers/LargeAvatar.tsx","components/Pages/Socials/components/FollowButton.tsx","components/Pages/Socials/components/FollowButtonContainer.ts","../node_modules/@material-ui/icons/CheckCircleRounded.js","../node_modules/@material-ui/icons/CancelRounded.js","hoc/FormEditCheck.js","components/Pages/Socials/Profile/Biography/BiographyForm.tsx","components/Pages/Socials/components/HeadLineOfProfilePaper.tsx","components/Pages/Socials/Profile/Biography/Biography.tsx","components/Pages/Socials/Profile/Biography/BiographyContainer.ts","components/Pages/Socials/Profile/Following/Friends.tsx","components/Pages/Socials/Profile/Following/Following.ts","components/Pages/Socials/Profile/ProfileAppBar/ShortInfoOfProfile.tsx","../node_modules/@material-ui/core/esm/ButtonGroup/ButtonGroup.js","components/Pages/Socials/Profile/ProfileAppBar/FollowersButton.tsx","components/Pages/Socials/Profile/ProfileAppBar/ButtonsBar.tsx","components/Pages/Socials/Profile/ProfileAppBar/ProfileAppBar.tsx","containers/Pages/Socials/ProfileAppBar.ts","components/Pages/Socials/Profile/AboutCard/AboutCardForm.tsx","components/Pages/Socials/Profile/AboutCard/AboutCard.tsx","components/Pages/Socials/Profile/AboutCard/AboutCardContainer.ts","components/Pages/Socials/Profile/Contacts/ContactForm.tsx","components/Pages/Socials/Profile/Contacts/Contact.tsx","components/Pages/Socials/Profile/Contacts/ContactContainer.ts","components/Pages/Socials/Profile/Profile/Profile.tsx","components/Pages/Socials/Profile/Profile/ProfileContainer.ts"],"names":["useStyle","makeStyles","theme","large","width","spacing","height","cursor","LargeAvatar","click","picture","children","classes","color","overlap","badgeContent","onClick","anchorOrigin","vertical","horizontal","src","className","FollowButton","followed","followingThunk","unfollowingThunk","getUserFollowingInfo","id","peopleSetLoading","followQueue","isLoading","includes","useState","loading","setLoading","useEffect","setTimeout","CircularProgress","Button","variant","connect","store","people","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","mapStateToProps","currentUserId","profile","user","userId","myId","app","formChecking","Component","IsCheckComponent","props","edit","isEdit","setEditMode","showEditMode","closeEditMode","editButton","Tooltip","title","aria-label","Fab","size","updateProfile","BiographyReduxForm","reduxForm","form","enableReinitialize","handleSubmit","isFetching","onSubmit","Box","mt","BioFormField","submitButton","HeadLineOfProfilePaper","headline","Grid","container","direction","justify","alignItems","item","Typography","Divider","paper","padding","compose","description","fullname","error","Paper","initialValues","formData","then","Skeleton","animation","successAlert","Biography","marginBottom","button","marginRight","marginTop","badge","largeAvatar","filter","namesOfAvatar","Friends","countOfFollowing","followingPeople","Loaded","following","map","el","ButtonBase","Badge","component","Avatar","alt","name","photos","display","followingCount","ShortInfoOfProfile","profile_info","justifyContent","fontSize","ml","mr","fullName","lookingForAJobDescription","styles","ButtonGroup","React","ref","_props$color","_props$component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","_props$disableRipple","disableRipple","_props$fullWidth","fullWidth","_props$orientation","orientation","_props$size","_props$variant","other","_objectWithoutProperties","buttonClassName","clsx","grouped","concat","capitalize","_extends","role","root","contained","child","withStyles","borderRadius","shape","boxShadow","shadows","flexDirection","minWidth","groupedHorizontal","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","groupedText","groupedTextHorizontal","borderRight","palette","type","groupedTextVertical","borderBottom","groupedTextPrimary","borderColor","fade","primary","main","groupedTextSecondary","secondary","groupedOutlined","groupedOutlinedHorizontal","marginLeft","borderRightColor","groupedOutlinedVertical","borderBottomColor","groupedOutlinedPrimary","groupedOutlinedSecondary","groupedContained","groupedContainedHorizontal","grey","action","groupedContainedVertical","groupedContainedPrimary","dark","groupedContainedSecondary","FollowersButton","NavLink","to","background","minHeight","breakpoints","down","menuBlock","links","textDecoration","ButtonsBar","getFollowLoading","isCurrentUserFollowed","startIcon","FollowButtonContainer","ProfileAppBar","getCurrentUserFollow","xs","sm","md","AboutCardFormRedux","lookingJob","AboutFormField","lookingForAJob","List","ListItem","ListItemIcon","ListItemText","myIdUser","AboutCard","ContactReduxForm","userInfo","FormFields","contact","arrayList","entries","contacts","key","iconHelper","noWrap","catch","e","stopSubmit","Contact","paddingLeft","paddingRight","secondPaperBlock","block","withAuthRedirect","match","getUserByIdThunk","params","jobDescription","aboutMe","Following","Profile"],"mappings":"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","file":"static/js/3.9bbfb74e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    large: {\r\n        width: theme.spacing(15),\r\n        height: theme.spacing(15),\r\n        cursor: \"pointer\"\r\n    },\r\n}));\r\n\r\ntype PropsType = {\r\n    click?: ()=> void,\r\n    picture?: string | null,\r\n    children?: React.ComponentType\r\n}\r\n\r\nconst LargeAvatar:React.FC<PropsType> = ({click, picture, children}) => {\r\n    let classes = useStyle();\r\n    return <Badge color=\"secondary\" overlap=\"circle\" badgeContent=\" \" onClick={click}\r\n                  anchorOrigin={{\r\n                      vertical: 'top',\r\n                      horizontal: 'right',\r\n                  }}>\r\n        <Avatar src={picture || \"\"} className={classes.large} />\r\n        {children}\r\n    </Badge>\r\n};\r\n\r\nexport default LargeAvatar;","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\n\r\ntype PropsType = {\r\n    followed?: boolean\r\n    id: number\r\n    peopleSetLoading: boolean\r\n    followingThunk: (userId: number) => void\r\n    unfollowingThunk: (userId: number) => void\r\n    followQueue: Array<number>\r\n    getUserFollowingInfo: (userId: number) => void\r\n}\r\n\r\n\r\nconst FollowButton: React.FC<PropsType> = ({followed, followingThunk, unfollowingThunk, getUserFollowingInfo, id, peopleSetLoading, followQueue}) => {\r\n    let isLoading = followQueue.includes(id);\r\n    const [loading, setLoading] = useState(false);\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n        getUserFollowingInfo(id);\r\n        setTimeout(()=>{setLoading(false)}, 300);\r\n    },[]);\r\n    return <Fragment>\r\n        {\r\n            (isLoading || peopleSetLoading || loading) ? <CircularProgress/> :\r\n                followed ? <Button variant=\"contained\" color=\"primary\" onClick={() => unfollowingThunk(id)}>\r\n                        UNFOLLOW\r\n                    </Button>\r\n                    : <Button variant=\"outlined\" color=\"primary\" onClick={() => followingThunk(id)}>\r\n                        FOLLOW\r\n                    </Button>\r\n        }\r\n    </Fragment>\r\n}\r\n\r\nexport default FollowButton;","import {connect} from \"react-redux\";\r\nimport FollowButton from \"./FollowButton\";\r\nimport {RootStateType} from \"../../../../redux/rootReducer\";\r\nimport {followingThunk, getUserFollowingInfo, unfollowingThunk} from \"../../../../redux/Socials/peopleReducer\";\r\n\r\n\r\ntype MapStateType = {\r\n    peopleSetLoading: boolean\r\n    followQueue: Array<number>\r\n}\r\n\r\ntype MapDispatchtype = {\r\n    followingThunk: (userId: number) => void\r\n    unfollowingThunk: (userId: number) => void\r\n    getUserFollowingInfo: (userId: number) => void\r\n}\r\ntype OwnPropsType = {\r\n    followed: boolean\r\n    id: number | null\r\n}\r\n\r\nconst mapStateToProps = (store: RootStateType) => ({\r\n    peopleSetLoading: store.people.loading,\r\n    followQueue: store.people.followQueue,\r\n});\r\n\r\n\r\n//<TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultRootState>\r\nexport default connect<MapStateType, MapDispatchtype, OwnPropsType, RootStateType>(mapStateToProps, {\r\n    followingThunk,\r\n    unfollowingThunk,\r\n    getUserFollowingInfo\r\n})(FollowButton);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM9.29 16.29L5.7 12.7a.9959.9959 0 010-1.41c.39-.39 1.02-.39 1.41 0L10 14.17l6.88-6.88c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41l-7.59 7.59c-.38.39-1.02.39-1.41 0z\"\n}), 'CheckCircleRounded');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm4.3 14.3c-.39.39-1.02.39-1.41 0L12 13.41 9.11 16.3c-.39.39-1.02.39-1.41 0a.9959.9959 0 010-1.41L10.59 12 7.7 9.11a.9959.9959 0 010-1.41c.39-.39 1.02-.39 1.41 0L12 10.59l2.89-2.89c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41L13.41 12l2.89 2.89c.38.38.38 1.02 0 1.41z\"\n}), 'CancelRounded');\n\nexports.default = _default;","import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Fab, Tooltip} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {updateProfile} from \"../redux/Socials/profileReducer\";\r\n\r\nconst mapStateToProps = (store) => ({\r\n    currentUserId: store.profile.user.userId,\r\n    myId: store.app.user,\r\n});\r\n\r\n\r\nexport const formChecking = (Component) => {\r\n    let IsCheckComponent = (props) => {\r\n        let edit = props.currentUserId === props.myId;\r\n        const [isEdit, setEditMode] = useState(false);\r\n        return <Component {...props} showEditMode={edit} isEdit={isEdit} closeEditMode={() => setEditMode(false)}\r\n                          editButton={edit &&\r\n                          <Tooltip title=\"Edit\" aria-label=\"add\" onClick={() => setEditMode(!isEdit)}>\r\n                              <Fab size=\"small\" color=\"secondary\">\r\n                                  {(isEdit) ? <CloseIcon/> : <EditIcon/>}\r\n                              </Fab>\r\n                          </Tooltip>}/>\r\n    }\r\n    IsCheckComponent = connect(mapStateToProps, {updateProfile})(IsCheckComponent)\r\n    return IsCheckComponent;\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Box} from \"@material-ui/core\";\r\nimport {submitButton} from \"../../../../../utils/helpers/SubmitButton\";\r\nimport BioFormField from \"./BioFormField\";\r\n\r\ntype PropsType = {\r\n    isFetching: boolean\r\n}\r\n\r\ntype FormPropsType = {\r\n    aboutMe: string\r\n}\r\n\r\n\r\nconst BiographyForm: React.FC<InjectedFormProps<FormPropsType, PropsType> & PropsType> = ({handleSubmit, isFetching}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <Box mt={2}>\r\n            <BioFormField/>\r\n            <Box mt={3}>\r\n                {\r\n                    submitButton(isFetching, \"Save\", \"contained\", \"primary\")\r\n                }\r\n            </Box>\r\n        </Box>\r\n    </form>\r\n}\r\n\r\n\r\nlet BiographyReduxForm = reduxForm<FormPropsType, PropsType>({\r\n    form: 'biography',\r\n    enableReinitialize: true\r\n})(BiographyForm)\r\n\r\nexport default BiographyReduxForm","import React, {Fragment} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\n\r\ntype PropsType = {\r\n    editButton: React.ComponentType\r\n    headline: string\r\n}\r\n\r\nconst HeadLineOfProfilePaper: React.FC<PropsType> = ({editButton, headline}) => {\r\n    return (\r\n        <Fragment>\r\n            <Grid container direction=\"row\"\r\n                  justify=\"space-between\"\r\n                  alignItems=\"center\">\r\n                <Grid item>\r\n                    <Typography variant={\"h3\"}>\r\n                        {headline}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    {editButton}\r\n                </Grid>\r\n            </Grid>\r\n            <Divider/>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default HeadLineOfProfilePaper;","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport {Box} from \"@material-ui/core\";\r\nimport {formChecking} from \"../../../../../hoc/FormEditCheck\";\r\nimport {compose} from \"redux\";\r\nimport BiographyReduxForm from \"./BiographyForm\";\r\nimport {SamuraiType} from \"../../../../../types/socials\";\r\nimport HeadLineOfProfilePaper from \"../../components/HeadLineOfProfilePaper\";\r\nimport {ErrorType} from \"../../../../../types/errors\";\r\nimport SnackBarContainer from \"../../../components/SnackbarContainer\";\r\n\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\ntype FormProps = {\r\n    aboutMe: string\r\n}\r\ntype PropsType = {\r\n    description: string\r\n    fullname: string\r\n    isEdit: boolean\r\n    isFetching: boolean\r\n    error: ErrorType | null\r\n    editButton: React.ComponentType,\r\n    closeEditMode: () => void\r\n    updateProfile: (formData: FormProps, formName: string) => Promise<void>\r\n    user: SamuraiType\r\n}\r\nconst Biography: React.FC<PropsType> = ({description, fullname, editButton, isEdit, closeEditMode, user, isFetching, error, updateProfile}) => {\r\n    const classes = useStyle();\r\n    const onSubmit = (formData: any) => {\r\n        updateProfile(formData, 'biography')\r\n            .then(() => {\r\n                closeEditMode();\r\n            })\r\n    }\r\n    return <Paper className={classes.paper}>\r\n        <HeadLineOfProfilePaper editButton={editButton} headline={\"Biography\"}/>\r\n        {isEdit ? <BiographyReduxForm isFetching={isFetching} initialValues={user} onSubmit={onSubmit}/> : <Box>\r\n            {(!fullname) ? <Skeleton animation=\"wave\" height={10} width={\"25%\"}/> :\r\n                <Typography variant={\"caption\"} color={\"secondary\"}>\r\n                    A little flash back of {fullname}\r\n                </Typography>\r\n            }\r\n            {(!description) ? <Skeleton animation=\"wave\" height={10} width={\"25%\"}/> :\r\n                <Typography variant={\"body2\"}>\r\n                    {description || \"There is no description.\"}\r\n                </Typography>\r\n            }\r\n        </Box>}\r\n        {error && !isFetching &&\r\n        <SnackBarContainer error={error} successAlert={\"Your information about you update successfully!\"}/>}\r\n    </Paper>\r\n};\r\n\r\nexport default compose(formChecking)(Biography);","import React from \"react\";\r\nimport {RootStateType} from \"../../../../../redux/rootReducer\";\r\nimport Biography from \"./Biography\";\r\nimport {connect} from \"react-redux\";\r\nimport {updateProfile} from \"../../../../../redux/Socials/profileReducer\";\r\n\r\n\r\nconst mapStateToProps = (store: RootStateType) => ({\r\n    user: store.profile.user,\r\n    isFetching: store.profile.isFetching,\r\n    error: store.profile.error,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {updateProfile})(Biography);","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Loaded from \"../../../../Loaded\";\r\nimport {PeopleType} from \"../../../../../types/socials\";\r\n\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    paper: {\r\n        marginBottom: theme.spacing(1),\r\n        padding: theme.spacing(3)\r\n    },\r\n    button: {\r\n        width: \"calc(100% / 3 - \" + theme.spacing(1) + \"px)\",\r\n        height: theme.spacing(15),\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    badge: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n    largeAvatar: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        filter: \"grayscale(50%)\",\r\n    },\r\n    namesOfAvatar: {\r\n        marginTop: theme.spacing(10),\r\n    },\r\n}));\r\n\r\ntype PropsType = {\r\n    countOfFollowing: number,\r\n    followingPeople: Array<PeopleType> | null\r\n}\r\n\r\nconst Friends: React.FC<PropsType> = ({countOfFollowing, followingPeople}) => {\r\n    const classes = useStyle();\r\n    if (!followingPeople)\r\n        return <Loaded/>\r\n    const following = followingPeople.map(el => <ButtonBase className={classes.button}>\r\n        <Badge color=\"primary\" badgeContent=\" \" overlap=\"circle\" variant=\"dot\" component={\"div\"}\r\n               className={classes.badge}>\r\n            <Avatar variant=\"rounded\" alt={el.name} src={el.photos.large}\r\n                    className={classes.largeAvatar}>\r\n                <Typography variant={\"caption\"} color={\"primary\"} className={classes.namesOfAvatar}>\r\n                    {el.name}\r\n                </Typography>\r\n            </Avatar>\r\n        </Badge>\r\n    </ButtonBase>)\r\n    return <Paper className={classes.paper}>\r\n        <Typography variant={\"h3\"}>\r\n            Following - {countOfFollowing}\r\n        </Typography>\r\n        <Divider/>\r\n        <Box display={\"flex\"}>\r\n            {following}\r\n        </Box>\r\n    </Paper>\r\n};\r\n\r\n\r\nexport default Friends;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Friends from \"./Friends\";\r\nimport {RootStateType} from \"../../../../../redux/rootReducer\";\r\n\r\n\r\n\r\nconst mapStateToProps = (store: RootStateType) => ({\r\n    countOfFollowing: store.profile.followingCount,\r\n    followingPeople: store.profile.followingPeople\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {})(Friends);","import React from 'react';\r\nimport {SamuraiType} from \"../../../../../types/socials\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport LargeAvatar from \"../../../../../utils/helpers/LargeAvatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\nexport type PropsType = {\r\n    profile_info: SamuraiType | null,\r\n}\r\n\r\nconst ShortInfoOfProfile: React.FC<PropsType> = ({profile_info}) => {\r\n    return (\r\n        <Box display={\"flex\"} alignItems={\"center\"} justifyContent=\"center\">\r\n            {\r\n                (!profile_info) ? <Skeleton variant={\"circle\"}>\r\n                    <LargeAvatar/>\r\n                </Skeleton> : <LargeAvatar picture={(profile_info) ? profile_info.photos.large : \"\"}/>\r\n            }\r\n            <Typography component={\"div\"}>\r\n                {\r\n                    (!profile_info) ? <Skeleton animation=\"wave\" height={10} width={150}>\r\n                            <Box fontSize={\"h4.fontSize\"} ml={2} mr={2}/>\r\n                        </Skeleton> :\r\n                        <Box fontSize={\"h4.fontSize\"} ml={2} mr={2}>\r\n                            {profile_info.fullName}\r\n                        </Box>\r\n                }\r\n                {\r\n                    (!profile_info) ? <Skeleton animation=\"wave\" height={10} width={150}/> :\r\n                        <Box fontSize={\"body2.fontSize\"} ml={2} mr={2}>\r\n                            {profile_info.lookingForAJobDescription}\r\n                        </Box>\r\n                }\r\n            </Typography>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ShortInfoOfProfile;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport { fade } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport Button from '../Button'; // Force a side effect so we don't have any override priority issue.\n// eslint-disable-next-line no-unused-expressions\n\nButton.styles;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      boxShadow: theme.shadows[2]\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none'\n    },\n\n    /* Pseudo-class applied to child elements if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {\n      minWidth: 40\n    },\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        borderTopRightRadius: 0,\n        borderTopLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomRightRadius: 0,\n        borderBottomLeftRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"`. */\n    groupedText: {},\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"horizontal\"`. */\n    groupedTextHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `orientation=\"vertical\"`. */\n    groupedTextVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)')\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"primary\"`. */\n    groupedTextPrimary: {\n      '&:not(:last-child)': {\n        borderColor: fade(theme.palette.primary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"text\"` and `color=\"secondary\"`. */\n    groupedTextSecondary: {\n      '&:not(:last-child)': {\n        borderColor: fade(theme.palette.secondary.main, 0.5)\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"`. */\n    groupedOutlined: {},\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"horizontal\"`. */\n    groupedOutlinedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1\n      },\n      '&:not(:last-child)': {\n        borderRightColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `orientation=\"vertical\"`. */\n    groupedOutlinedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1\n      },\n      '&:not(:last-child)': {\n        borderBottomColor: 'transparent'\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"primary\"`. */\n    groupedOutlinedPrimary: {\n      '&:hover': {\n        borderColor: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    groupedOutlinedSecondary: {\n      '&:hover': {\n        borderColor: theme.palette.secondary.main\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"`. */\n    groupedContained: {\n      boxShadow: 'none'\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"horizontal\"`. */\n    groupedContainedHorizontal: {\n      '&:not(:last-child)': {\n        borderRight: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderRight: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `orientation=\"vertical\"`. */\n    groupedContainedVertical: {\n      '&:not(:last-child)': {\n        borderBottom: \"1px solid \".concat(theme.palette.grey[400]),\n        '&$disabled': {\n          borderBottom: \"1px solid \".concat(theme.palette.action.disabled)\n        }\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"primary\"`. */\n    groupedContainedPrimary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.primary.dark\n      }\n    },\n\n    /* Styles applied to the children if `variant=\"contained\"` and `color=\"secondary\"`. */\n    groupedContainedSecondary: {\n      '&:not(:last-child)': {\n        borderColor: theme.palette.secondary.dark\n      }\n    }\n  };\n};\nvar ButtonGroup = React.forwardRef(function ButtonGroup(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'outlined' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"disableRipple\", \"fullWidth\", \"orientation\", \"size\", \"variant\"]);\n\n  var buttonClassName = clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant))], classes[\"grouped\".concat(capitalize(variant)).concat(capitalize(orientation))], classes[\"grouped\".concat(capitalize(variant)).concat(color !== 'default' ? capitalize(color) : '')], disabled && classes.disabled);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, fullWidth && classes.fullWidth, disableElevation && classes.disableElevation, variant === 'contained' && classes.contained, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.cloneElement(child, {\n      className: clsx(buttonClassName, child.props.className),\n      color: child.props.color || color,\n      disabled: child.props.disabled || disabled,\n      disableElevation: child.props.disableElevation || disableElevation,\n      disableFocusRipple: disableFocusRipple,\n      disableRipple: disableRipple,\n      fullWidth: fullWidth,\n      size: child.props.size || size,\n      variant: child.props.variant || variant\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonGroup.propTypes = {\n  /**\n   * The content of the button group.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the buttons will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the button keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the buttons will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The group orientation.\n   */\n  orientation: PropTypes.oneOf(['vertical', 'horizontal']),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButtonGroup'\n})(ButtonGroup);","import React from 'react';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    followingCount: number\r\n}\r\n\r\nconst FollowersButton:React.FC<PropsType> = ({followingCount}) => {\r\n    return (\r\n        <Box display={\"flex\"} alignItems={\"center\"} justifyContent=\"center\" mt={3}>\r\n            <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\r\n                <Button size={\"small\"} component={NavLink} to={\"/socials/following\"}>\r\n                    <Box>\r\n                        <Box fontSize={\"h4.fontSize\"} display={\"block\"}>\r\n                            {followingCount}\r\n                        </Box>\r\n                        <Box fontSize={\"body2.fontSize\"} display={\"block\"}>\r\n                            following\r\n                        </Box>\r\n                    </Box>\r\n                </Button>\r\n                <Button size={\"small\"}>\r\n                    <Box>\r\n                        <Box fontSize={\"h4.fontSize\"} display={\"block\"}>\r\n                            847\r\n                        </Box>\r\n                        <Box fontSize={\"body2.fontSize\"} display={\"block\"}>\r\n                            followers\r\n                        </Box>\r\n                    </Box>\r\n                </Button>\r\n            </ButtonGroup>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default FollowersButton;","import React, {Fragment} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Link, NavLink, useRouteMatch} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport FollowButtonContainer from \"../../components/FollowButtonContainer\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {SamuraiType} from \"../../../../../types/socials\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    container: {\r\n        background: \"#333\",\r\n        minHeight: 200,\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            justifyContent: \"center\",\r\n        }\r\n    },\r\n    large: {\r\n        width: theme.spacing(15),\r\n        height: theme.spacing(15),\r\n        cursor: \"pointer\"\r\n    },\r\n    menuBlock: {\r\n        marginTop: theme.spacing(5),\r\n    },\r\n    links: {\r\n        padding: theme.spacing(3),\r\n        textDecoration: \"none\",\r\n        color: \"white\",\r\n        '&:hover': {\r\n            color: theme.palette.primary\r\n        }\r\n    },\r\n}));\r\n\r\ntype PropsType = {\r\n    profile_info: SamuraiType | null,\r\n    userId: number | null,\r\n    isCurrentUserFollowed: boolean\r\n    getFollowLoading: boolean\r\n}\r\n\r\nconst ButtonsBar: React.FC<PropsType> = ({profile_info, userId, getFollowLoading, isCurrentUserFollowed}) => {\r\n    const classes = useStyle();\r\n    return (\r\n        <Fragment>\r\n            {(profile_info && userId === profile_info.userId) ?\r\n                <Grid className={classes.menuBlock} container justify={\"space-between\"} alignItems={\"center\"}>\r\n                    <Grid item>\r\n                        <Link to=\"#\" className={classes.links}>\r\n                            About !\r\n                        </Link>\r\n                        <Link to=\"#\" className={classes.links}>\r\n                            Friends !\r\n                        </Link>\r\n                        <Link to=\"#\" className={classes.links}>\r\n                            Saved Jobs !\r\n                        </Link>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button\r\n                            startIcon={<SettingsIcon/>}\r\n                            component={NavLink}\r\n                            to={\"/settings/profile\"}\r\n                        >\r\n                            Settings\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                :\r\n                <Grid className={classes.menuBlock} container justify={\"flex-end\"} alignItems={\"center\"}>\r\n                    <Grid item>\r\n                        {getFollowLoading ? <CircularProgress/> :\r\n                            <FollowButtonContainer id={(!profile_info) ? 0 : profile_info.userId}\r\n                                                   followed={isCurrentUserFollowed}/>}\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ButtonsBar;","import React, {Fragment, useEffect, useState} from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport ShortInfoOfProfile from \"./ShortInfoOfProfile\";\r\nimport FollowersButton from \"./FollowersButton\";\r\nimport ButtonsBar from \"./ButtonsBar\";\r\nimport {SamuraiType} from \"../../../../../types/socials\";\r\n\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n    container: {\r\n        background: \"#333\",\r\n        minHeight: 200,\r\n        //justifyContent: \"space-between\",\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            justifyContent: \"center\",\r\n        }\r\n    },\r\n    large: {\r\n        width: theme.spacing(15),\r\n        height: theme.spacing(15),\r\n        cursor: \"pointer\"\r\n    },\r\n    menuBlock: {\r\n        marginTop: theme.spacing(5),\r\n    },\r\n    links: {\r\n        padding: theme.spacing(3),\r\n        textDecoration: \"none\",\r\n        color: \"white\",\r\n        '&:hover': {\r\n            color: theme.palette.primary\r\n        }\r\n    },\r\n}));\r\n\r\ntype PropsType = {\r\n    profile_info: SamuraiType | null,\r\n    userId: number | null,\r\n    isCurrentUserFollowed: boolean\r\n    getCurrentUserFollow: (id: number) => void\r\n    followingCount: number\r\n}\r\n\r\nconst ProfileAppBar: React.FC<PropsType> = ({profile_info, userId, getCurrentUserFollow, isCurrentUserFollowed, followingCount}) => {\r\n    const classes = useStyle();\r\n    const [getFollowLoading, setLoading] = useState(false);\r\n    useEffect(() => {\r\n        if (profile_info) {\r\n            setLoading(true);\r\n            getCurrentUserFollow(profile_info.userId);\r\n            setTimeout(() => setLoading(false), 1000);\r\n        } else\r\n            setLoading(true);\r\n\r\n    }, [profile_info]);\r\n    return <Fragment><Grid container className={classes.container}\r\n                           direction=\"row\"\r\n                           alignItems=\"center\" justify={\"space-between\"}>\r\n        <Grid item xs={12} sm={12} md={6}>\r\n            <ShortInfoOfProfile profile_info={profile_info}/>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={5}>\r\n            <FollowersButton followingCount={followingCount}/>\r\n        </Grid>\r\n\r\n        <ButtonsBar getFollowLoading={getFollowLoading} isCurrentUserFollowed={isCurrentUserFollowed}\r\n                    profile_info={profile_info} userId={userId}/>\r\n\r\n    </Grid>\r\n\r\n    </Fragment>\r\n};\r\n\r\nexport default ProfileAppBar;","import React from \"react\";\r\nimport ProfileAppBar from \"../../../components/Pages/Socials/Profile/ProfileAppBar/ProfileAppBar\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../../redux/rootReducer\";\r\nimport {PeopleType, SamuraiType} from \"../../../types/socials\";\r\nimport {getCurrentUserFollow} from \"../../../redux/Socials/peopleReducer\";\r\n\r\ntype MapStatePropsType = {\r\n    profile_info: SamuraiType | null,\r\n    userId: number | null,\r\n    isCurrentUserFollowed: boolean\r\n    people: Array<PeopleType>\r\n    followingCount: number\r\n\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getCurrentUserFollow: (id: number) => void\r\n}\r\n\r\n\r\nconst mapStateToProps = (store: RootStateType): MapStatePropsType => ({\r\n    profile_info: store.profile.user,\r\n    userId: store.app.user,\r\n    isCurrentUserFollowed: store.people.isCurrentUserFollowed,\r\n    people: store.people.people,\r\n    followingCount: store.profile.followingCount\r\n});\r\n\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, RootStateType>(mapStateToProps, {getCurrentUserFollow})(ProfileAppBar);","import React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Box} from \"@material-ui/core\";\r\nimport {submitButton} from \"../../../../../utils/helpers/SubmitButton\";\r\nimport AboutFormField from \"./AboutFormField\";\r\n\r\ntype PropsType = {\r\n    lookingJob: boolean\r\n    isFetching: boolean\r\n}\r\n\r\ntype FormProps = {\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    handleSubmit: any\r\n}\r\n\r\n\r\nconst AboutCardForm: React.FC<InjectedFormProps<FormProps, PropsType> & PropsType> = ({handleSubmit, lookingJob, isFetching}) => {\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <AboutFormField lookingJob={lookingJob}/>\r\n        <Box mt={3}>\r\n            {\r\n                submitButton(isFetching, \"Save\", \"contained\", \"primary\")\r\n            }\r\n        </Box>\r\n    </form>\r\n};\r\n\r\nlet AboutCardFormRedux = reduxForm<FormProps, PropsType>({\r\n    form: 'aboutCardForm'\r\n})(AboutCardForm);\r\n\r\n\r\nexport default AboutCardFormRedux;","import React from \"react\";\r\nimport {compose} from \"redux\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport CheckCircleRoundedIcon from '@material-ui/icons/CheckCircleRounded';\r\nimport CancelRoundedIcon from '@material-ui/icons/CancelRounded';\r\nimport AboutCardFormRedux from \"./AboutCardForm\";\r\nimport {SamuraiType} from \"../../../../../types/socials\";\r\nimport Loaded from \"../../../../Loaded\";\r\nimport {formChecking} from \"../../../../../hoc/FormEditCheck\";\r\nimport SnackBarContainer from \"../../../components/SnackbarContainer\";\r\nimport {ErrorType} from \"../../../../../types/errors\";\r\nimport HeadLineOfProfilePaper from \"../../components/HeadLineOfProfilePaper\";\r\n\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\n\r\ntype PropsTypeAboutCard = {\r\n    user: SamuraiType | null\r\n    myIdUser: number | null\r\n    updateProfile: (formData: Omit<SamuraiType, 'photos'>, formName: string) => Promise<void>\r\n    showEditMode: boolean\r\n    isEdit: boolean\r\n    isFetching: boolean\r\n    error: ErrorType | null\r\n    editButton: React.ComponentType\r\n    closeEditMode: () => void\r\n}\r\n\r\nconst AboutCard: React.FC<PropsTypeAboutCard> = ({updateProfile, user, editButton, isEdit, closeEditMode, isFetching, error}) => {\r\n    const classes = useStyle();\r\n    if (!user)\r\n        return <Loaded/>\r\n\r\n    const onSubmit = (formData: any) => {\r\n        updateProfile(formData, 'aboutCardForm')\r\n            .then(() => {\r\n                closeEditMode();\r\n            })\r\n    }\r\n    return <Paper className={classes.paper}>\r\n        <HeadLineOfProfilePaper editButton={editButton} headline={\"About\"}/>\r\n        {isEdit ? <AboutCardFormRedux initialValues={user} lookingJob={user.lookingForAJob} isFetching={isFetching} onSubmit={onSubmit}/> :\r\n            <Grid container>\r\n                <Grid item xs={12} sm={12} md={6}>\r\n                    <List component=\"nav\">\r\n                        <ListItem>\r\n                            <ListItemIcon>\r\n                                {user.lookingForAJob ? <CheckCircleRoundedIcon color={\"primary\"}/> :\r\n                                    <CancelRoundedIcon/>}\r\n                            </ListItemIcon>\r\n                            <ListItemText secondary={\"Looking job?\"} primary={user.lookingForAJobDescription}/>\r\n                        </ListItem>\r\n                    </List>\r\n                </Grid>\r\n            </Grid>}\r\n        {error && !isFetching &&\r\n        <SnackBarContainer error={error} successAlert={\"Your information about you update successfully!\"}/>}\r\n    </Paper>\r\n};\r\n\r\nexport default compose(formChecking)(AboutCard);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../../../../redux/rootReducer\";\r\nimport {SamuraiType} from \"../../../../../types/socials\";\r\nimport {updateProfile} from \"../../../../../redux/Socials/profileReducer\";\r\nimport AboutCard from \"./AboutCard\";\r\nimport {ErrorType} from \"../../../../../types/errors\";\r\n\r\n\r\ntype MapStateType = {\r\n    user: SamuraiType | null\r\n    myIdUser: number | null\r\n    error: ErrorType | null\r\n    isFetching: boolean\r\n}\r\n\r\ntype MapDispatchType = {\r\n    updateProfile: (data: Omit<SamuraiType, 'photos'>, formName: string) => void\r\n}\r\n\r\ntype OwnPropsType = {\r\n    lookingForAJob: boolean\r\n    jobDescription: string\r\n}\r\n\r\nconst mapStateToProps = (store: RootStateType) => ({\r\n    user: store.profile.user,\r\n    myIdUser: store.app.user,\r\n    isFetching: store.profile.isFetching,\r\n    error: store.profile.error,\r\n});\r\n\r\nexport default connect<MapStateType, MapDispatchType, OwnPropsType, RootStateType>(mapStateToProps, {updateProfile})(AboutCard);","import React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {SamuraiType} from \"../../../../../types/socials\";\r\nimport {Box} from \"@material-ui/core\";\r\nimport Loaded from \"../../../../Loaded\";\r\nimport {submitButton} from \"../../../../../utils/helpers/SubmitButton\";\r\nimport FormFields from \"./FormFields\";\r\n\r\ntype PropsType = {\r\n    userInfo: SamuraiType | null\r\n    isFetching: boolean\r\n}\r\n\r\nconst ContactForm: React.FC<InjectedFormProps<SamuraiType, PropsType> & PropsType> = ({handleSubmit, userInfo, isFetching}) => {\r\n    if (!userInfo)\r\n        return <Loaded/>\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <FormFields userInfo={userInfo}/>\r\n        <Box mt={3}>\r\n            {\r\n                submitButton(isFetching, \"Save\", \"contained\", \"primary\")\r\n            }\r\n        </Box>\r\n    </form>\r\n}\r\n\r\n\r\nlet ContactReduxForm = reduxForm<SamuraiType, PropsType>({\r\n    form: 'contacts',\r\n    enableReinitialize: true\r\n})(ContactForm);\r\nexport default ContactReduxForm\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {Contacts, SamuraiType} from \"../../../../../types/socials\";\r\nimport {List} from \"@material-ui/core\";\r\nimport ContactReduxForm from \"./ContactForm\";\r\nimport {compose} from \"redux\";\r\nimport {formChecking} from \"../../../../../hoc/FormEditCheck\";\r\nimport {iconHelper} from \"../../../../../utils/helpers/SocialNetworkIcon\";\r\nimport Loaded from \"../../../../Loaded\";\r\nimport HeadLineOfProfilePaper from \"../../components/HeadLineOfProfilePaper\";\r\nimport {ErrorType} from \"../../../../../types/errors\";\r\nimport SnackBarContainer from \"../../../components/SnackbarContainer\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    contact: {\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            marginTop: theme.spacing(2)\r\n        }\r\n    }\r\n}));\r\n\r\n\r\ntype PropsType = {\r\n    user: SamuraiType | null\r\n    isEdit: boolean\r\n    editButton: React.ComponentType\r\n    isFetching: boolean\r\n    error: ErrorType | null\r\n    closeEditMode: () => void\r\n    updateProfile: (formData: Object, formName: string) => Promise<void>\r\n}\r\n\r\nconst Contact: React.FC<PropsType> = ({user, editButton, isEdit, closeEditMode, updateProfile, error, isFetching}) => {\r\n    const classes = useStyle();\r\n    let arrayList: any = [];\r\n    if (!user)\r\n        return <Loaded/>\r\n    const onSubmit = (formData: any) => {\r\n        updateProfile(formData, 'contacts')\r\n            .then(() => {\r\n                closeEditMode();\r\n            })\r\n            .catch((e) => {\r\n                stopSubmit('contacts', e)\r\n            })\r\n    }\r\n    for (let [key, value] of Object.entries(user.contacts)) {\r\n        if (value)\r\n            arrayList = [...arrayList, <ListItem key={value + \"-edit-form\"}>\r\n                <ListItemIcon>\r\n                    {iconHelper(key)}\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                    <Typography noWrap variant={\"body2\"}>{value}</Typography>\r\n                </ListItemText>\r\n            </ListItem>]\r\n    }\r\n\r\n    return <Paper className={classes.contact}>\r\n        <HeadLineOfProfilePaper editButton={editButton} headline={\"Contacts\"}/>\r\n        {isEdit ? <ContactReduxForm isFetching={isFetching} initialValues={user} userInfo={user} onSubmit={onSubmit}/> :\r\n            <List component=\"nav\">\r\n                {arrayList}\r\n            </List>}\r\n        {error && !isFetching &&\r\n        <SnackBarContainer error={error} successAlert={\"Your information about you update successfully!\"}/>}\r\n    </Paper>\r\n};\r\n\r\n\r\nexport default compose(formChecking)(Contact);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Contact from \"./Contact\";\r\nimport {RootStateType} from \"../../../../../redux/rootReducer\";\r\nimport {updateProfile} from \"../../../../../redux/Socials/profileReducer\";\r\n\r\n\r\nconst mapStateToProps = (store: RootStateType) => ({\r\n    user: store.profile.user,\r\n    isFetching: store.profile.isFetching,\r\n    error: store.profile.error,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {updateProfile})(Contact);","import React, {Fragment, useEffect} from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Biography from \"../Biography/BiographyContainer\";\r\nimport Following from \"./../Following/Following\";\r\nimport ProfileAppBar from \"../../../../../containers/Pages/Socials/ProfileAppBar\";\r\nimport {withAuthRedirect} from \"../../../../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {SamuraiType} from \"../../../../../types/socials\";\r\nimport Loaded from \"../../../../Loaded\";\r\nimport AboutCard from \"../AboutCard/AboutCardContainer\";\r\nimport Contact from \"../Contacts/ContactContainer\";\r\n\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    paper: {\r\n        paddingLeft: theme.spacing(3),\r\n        paddingRight: theme.spacing(3),\r\n        marginTop: -theme.spacing(2),\r\n    },\r\n    secondPaperBlock: {\r\n        marginTop: -theme.spacing(2),\r\n        paddingLeft: theme.spacing(3),\r\n        paddingRight: theme.spacing(3),\r\n    },\r\n    block: {\r\n        marginRight: theme.spacing(2),\r\n    }\r\n}));\r\n\r\ntype PropsType = {\r\n    user: SamuraiType | null,\r\n    match: any,\r\n    location: any,\r\n    isFetching: boolean,\r\n    getUserByIdThunk: (id: number) => void\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = ({user, isFetching, match, getUserByIdThunk}) => {\r\n    const classes = useStyle();\r\n    let id = match.params.id;\r\n    useEffect(() => {\r\n        getUserByIdThunk(id);\r\n    }, [id]);\r\n    if (!user || isFetching)\r\n        return <Loaded/>;\r\n    return <Fragment>\r\n        <ProfileAppBar/>\r\n        <Grid container justify={\"space-between\"} alignItems={\"flex-start\"} className={classes.paper}>\r\n            <Grid container item xs={12} sm={12} md={7} spacing={1}>\r\n                <Grid item xs={12} sm={12} md={12}>\r\n                    <AboutCard lookingForAJob={user.lookingForAJob} jobDescription={user.lookingForAJobDescription}/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={12}>\r\n                    <Biography description={user.aboutMe}\r\n                               fullname={user.fullName}/>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container item xs={12} sm={12} md={5} spacing={1}>\r\n                <Grid item xs={12} sm={12} md={12}>\r\n                    <Contact/>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={12}>\r\n                    <Following/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    </Fragment>\r\n};\r\n\r\n\r\nexport default compose(withAuthRedirect)(Profile);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Profile from \"./Profile\";\r\nimport {getUserByIdThunk} from \"../../../../../redux/Socials/profileReducer\";\r\nimport {SamuraiType} from \"../../../../../types/socials\";\r\nimport {RootStateType} from \"../../../../../redux/rootReducer\";\r\n\r\ntype ProfilePropsType = {\r\n    user: SamuraiType | null,\r\n    isFetching: boolean\r\n}\r\n\r\n\r\nconst mapStateToProps = (store: RootStateType): ProfilePropsType => ({\r\n    user: store.profile.user,\r\n    isFetching: store.profile.isFetching\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {getUserByIdThunk})(Profile);"],"sourceRoot":""}